<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Offer Management - Admin Panel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">




    <style>
        .admin-content {
            margin-left: var(--sidebar-width-closed);
            padding: 100px;
            transition: margin-left 0.3s ease-in-out;
            min-height: 100vh;
            background: var(--background);
        }
        #admin-sidebar.show ~ .admin-content {
            margin-left: var(--sidebar-width-open);
        }
        @media (max-width: 768px) {
            #admin-sidebar.show ~ .admin-content {
                margin-left: 200px;
            }
        }
        @media (max-width: 480px) {
            .admin-content { margin-left: 0; }
            #admin-sidebar.show ~ .admin-content { margin-left: 0; }
        }
        .offer-table {
            background: var(--card-bg);
            box-shadow: var(--shadow);
            border-radius: 8px;
            overflow-x: auto;
        }
        .btn-custom {
            background: var(--primary);
            color: white;
            border: none;
        }
        .btn-custom:hover {
            background: #1565c0;
        }



    .pagination {
    display: flex;
    justify-content: center;
    align-items: center;
}

.pagination .btn {
    min-width: 36px;
    text-align: center;
}

.pagination .btn-primary {
    background-color: #007bff;
    border-color: #007bff;
}

.pagination .btn-outline-primary {
    color: #007bff;
    border-color: #007bff;
}

.pagination .btn-outline-primary:hover {
    background-color: #f8f9fa;
}


.alert {
    padding: 15px;
    margin-bottom: 20px;
    border-radius: 5px;
    border: none;
}

.alert-success {
    background-color: #F4F7F7; /* Light grey background */
    color: #FFFFFF; /* White text */
}

.alert-danger {
    background-color: #E5574E; /* Red error background */
    color: #FFFFFF; /* White text */
}







/* Popup container (shared for all Swal instances) */
.swal-2025-popup {
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
    padding: 20px;
    background-color: #F4F7F7 !important; /* Light grey background */
}

/* Title (shared) */
.swal-2025-title {
    font-size: 1.5rem;
    font-weight: 700;
    letter-spacing: 1px;
    margin-bottom: 10px;
    color: #000000 !important; /* White text */
}

/* Text (content, shared) */
.swal-2025-text {
    font-size: 1rem;
    opacity: 0.9;
    color: #030202 !important; /* White text */
}

/* Confirm button (shared) */
.swal-2025-confirm {
    background: linear-gradient(90deg, #E5574E 0%, #ff1a1a 100%) !important; /* Red gradient */
    color: #FFFFFF !important; /* White text */
    padding: 10px 20px;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
    transition: transform 0.2s ease;
}

.swal-2025-confirm:hover {
    transform: scale(1.05);
}

/* Cancel button (for delete confirmation) */
.swal-2025-cancel {
    background: linear-gradient(90deg, #F4F7F7 0%, #FFFFFF 100%) !important; /* Grey to white gradient */
    color: #E5574E !important; /* Red text */
    padding: 10px 20px;
    border: 1px solid #E5574E !important; /* Red border */
    border-radius: 8px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 1px;
    transition: transform 0.2s ease;
}

.swal-2025-cancel:hover {
    transform: scale(1.05);
    background: linear-gradient(90deg, #FFFFFF 0%, #F4F7F7 100%) !important; /* Reverse gradient */
}
    </style>

    
</head>
<body>
    <%- include('../partials/adminsidebar') %>

    <div class="admin-content">
        <div class="container-fluid">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold">Offer Management</h2>
                <button class="btn btn-custom" data-bs-toggle="modal" data-bs-target="#addOfferModal">Add New Offer</button>
            </div>

            <!-- Offer Table -->
            <div class="offer-table p-3">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Discount (%)</th>
                            <th>Applicable To</th>
                            <th>Selected One</th>
                            <th>Expiry Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>


<!-- Messages -->
<% if (successMsg) { %>
    <div class="alert alert-success" style="background-color: #F4F7F7; color: #FFFFFF;">
        <%= successMsg %>
    </div>
<% } %>
<% if (errorMsg) { %>
    <div class="alert alert-danger" style="background-color: #E5574E; color: #FFFFFF;">
        <%= errorMsg %>
    </div>
<% } %>

<!-- Rest of your template (offer table, pagination, etc.) follows here -->




                        <% if (offers && offers.length > 0) { %>
                            <% offers.forEach(offer => { %>
                                <tr>
                                    <td><%= offer.discountValue %></td>
                                    <td><%= offer.applicableTo %></td>
                                    <td>
                                        <% if (offer.applicableTo === 'product') { %>
                                            <%= offer.productId ? offer.productId.name : 'N/A' %>
                                        <% } else { %>
                                            <%= offer.categoryId ? offer.categoryId.name : 'N/A' %>
                                        <% } %>
                                    </td>
                                    <td><%= new Date(offer.expiryDate).toLocaleDateString() %></td>
                                    <td>
                                        <span class="badge <%= offer.isActive ? 'bg-success' : 'bg-danger' %>">
                                            <%= offer.isActive ? 'Active' : 'Inactive' %>
                                        </span>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#editOfferModal<%= offer._id %>">Edit</button>
                                        <form action="/admin/offers/delete/<%= offer._id %>" method="POST" class="d-inline delete-offer-form" data-offer-id="<%= offer._id %>">
                                            <button type="submit" class="btn btn-sm btn-outline-danger delete-offer-btn">Delete</button>
                                        </form>                        
                                    </td>
                                </tr>


<!-- Edit Offer Modal -->
<div class="modal fade" id="editOfferModal<%= offer._id %>" tabindex="-1" aria-labelledby="editOfferModalLabel<%= offer._id %>" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editOfferModalLabel<%= offer._id %>">Edit Offer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editOfferForm<%= offer._id %>" action="/admin/offers/update/<%= offer._id %>" method="POST" onsubmit="return validateEditForm('<%= offer._id %>')">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="discountValue<%= offer._id %>" class="form-label">Discount Value (%)</label>
                        <input type="number" class="form-control" id="discountValue<%= offer._id %>" name="discountValue" value="<%= offer.discountValue %>" required min="0" max="100">
                        <span class="text-danger" id="discountValueError<%= offer._id %>"></span>
                    </div>
                    <div class="mb-3">
                        <label for="applicableTo<%= offer._id %>" class="form-label">Applicable To</label>
                        <select class="form-select" id="applicableTo<%= offer._id %>" name="applicableTo" required onchange="toggleTarget('<%= offer._id %>')">
                            <option value="" disabled>-- Select Option --</option>
                            <option value="product" <%= offer.applicableTo === 'product' ? 'selected' : '' %>>Product</option>
                            <option value="category" <%= offer.applicableTo === 'category' ? 'selected' : '' %>>Category</option>
                        </select>
                        <span class="text-danger" id="applicableToError<%= offer._id %>"></span>
                    </div>
                    <div class="mb-3" id="productField<%= offer._id %>" style="<%= offer.applicableTo === 'product' ? 'display: block' : 'display: none' %>">
                        <label for="productId<%= offer._id %>" class="form-label">Select Product</label>
                        <select class="form-select" id="productId<%= offer._id %>" name="productId">
                            <option value="">-- Select Product --</option>
                            <% if (products && products.length > 0) { %>
                                <% products.forEach(product => { %>
                                    <option value="<%= product._id %>" <%= offer.productId && offer.productId._id.toString() === product._id.toString() ? 'selected' : '' %>>
                                        <%= product.name %>
                                    </option>
                                <% }) %>
                            <% } else { %>
                                <option value="">No active products available</option>
                            <% } %>
                        </select>
                        <span class="text-danger" id="productIdError<%= offer._id %>"></span>
                    </div>
                    <div class="mb-3" id="categoryField<%= offer._id %>" style="<%= offer.applicableTo === 'category' ? 'display: block' : 'display: none' %>">
                        <label for="categoryId<%= offer._id %>" class="form-label">Select Category</label>
                        <select class="form-select" id="categoryId<%= offer._id %>" name="categoryId">
                            <option value="">-- Select Category --</option>
                            <% if (categories && categories.length > 0) { %>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>" <%= offer.categoryId && offer.categoryId._id.toString() === category._id.toString() ? 'selected' : '' %>>
                                        <%= category.name %>
                                    </option>
                                <% }) %>
                            <% } else { %>
                                <option value="">No active categories available</option>
                            <% } %>
                        </select>
                        <span class="text-danger" id="categoryIdError<%= offer._id %>"></span>
                    </div>
                    <div class="mb-3">
                        <label for="expiryDate<%= offer._id %>" class="form-label">Expiry Date</label>
                        <input type="date" class="form-control" id="expiryDate<%= offer._id %>" name="expiryDate" value="<%= offer.expiryDate ? offer.expiryDate.toISOString().split('T')[0] : '' %>" required>
                        <span class="text-danger" id="expiryDateError<%= offer._id %>"></span>
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="isActive<%= offer._id %>" name="isActive" <%= offer.isActive ? 'checked' : '' %>>
                        <label for="isActive<%= offer._id %>" class="form-check-label">Active</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-custom">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>




                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="6" class="text-center">No offers available</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>



<!-- Pagination -->
<% if (pagination && pagination.totalPages > 1) { %>
    <div class="pagination mt-3">
        <% for(let i = 1; i <= pagination.totalPages; i++) { %>
            <a href="?page=<%= i %>" 
               class="btn btn-sm <%= pagination.currentPage === i ? 'btn-primary' : 'btn-outline-primary' %> mx-1">
                <%= i %>
            </a>
        <% } %>
    </div>
<% } %>


            </div>



<!-- Add Offer Modal -->
<div class="modal fade" id="addOfferModal" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addOfferModalLabel">Add New Offer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addOfferForm" action="/admin/offers/add" method="POST" onsubmit="return validateAddForm()">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="discountValue" class="form-label">Discount Value (%)</label>
                        <input type="number" class="form-control" id="discountValue" name="discountValue" required min="0" max="100">
                        <span class="text-danger" id="discountValueError"></span>
                    </div>
                    <div class="mb-3">
                        <label for="applicableTo" class="form-label">Applicable To</label>
                        <select class="form-select" id="applicableTo" name="applicableTo" required onchange="toggleTarget('')">
                            <option value="" selected disabled>-- Select Option --</option>
                            <option value="product">Product</option>
                            <option value="category">Category</option>
                        </select>
                        <span class="text-danger" id="applicableToError"></span>
                    </div>
                    <div class="mb-3" id="productField" style="display: none;">
                        <label for="productId" class="form-label">Select Product</label>
                        <select class="form-select" id="productId" name="productId">
                            <option value="">-- Select Product --</option>
                            <% if (products && products.length > 0) { %>
                                <% products.forEach(product => { %>
                                    <option value="<%= product._id %>"><%= product.name %></option>
                                <% }) %>
                            <% } else { %>
                                <option value="">No active products available</option>
                            <% } %>
                        </select>
                        <span class="text-danger" id="productIdError"></span>
                    </div>
                    <div class="mb-3" id="categoryField" style="display: none;">
                        <label for="categoryId" class="form-label">Select Category</label>
                        <select class="form-select" id="categoryId" name="categoryId">
                            <option value="">-- Select Category --</option>
                            <% if (categories && categories.length > 0) { %>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>"><%= category.name %></option>
                                <% }) %>
                            <% } else { %>
                                <option value="">No active categories available</option>
                            <% } %>
                        </select>
                        <span class="text-danger" id="categoryIdError"></span>
                    </div>
                    <div class="mb-3">
                        <label for="expiryDate" class="form-label">Expiry Date</label>
                        <input type="date" class="form-control" id="expiryDate" name="expiryDate" required>
                        <span class="text-danger" id="expiryDateError"></span>
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="isActive" name="isActive" checked>
                        <label for="isActive" class="form-check-label">Active</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-custom">Save Offer</button>
                </div>
            </form>
        </div>
    </div>
</div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
       
       const successMsg = '<%= successMsg || '' %>';
    const errorMsg = '<%= errorMsg || '' %>';

    if (successMsg) {
        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: successMsg,
            timer: 1000,
            showConfirmButton: false,
            customClass: {
                popup: 'swal-2025-popup', // Use same popup class as delete
                title: 'swal-2025-title',
                content: 'swal-2025-text',
                confirmButton: 'swal-2025-confirm' // Not visible, but included
            },
            buttonsStyling: false
        }).then(() => {
            window.history.replaceState({}, document.title, '/admin/offers');
        });
    } else if (errorMsg) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: errorMsg,
            timer: 1000,
            showConfirmButton: false,
            customClass: {
                popup: 'swal-2025-popup', // Use same popup class as delete
                title: 'swal-2025-title',
                content: 'swal-2025-text',
                confirmButton: 'swal-2025-confirm' // Not visible, but included
            },
            buttonsStyling: false
        }).then(() => {
            window.history.replaceState({}, document.title, '/admin/offers');
        });
    }

    // Your existing delete confirmation code remains unchanged
    document.querySelectorAll('.delete-offer-form').forEach(form => {
        form.addEventListener('submit', function(e) {
            e.preventDefault();
            const offerId = this.getAttribute('data-offer-id');

            Swal.fire({
                title: 'Are You Sure?',
                text: 'This will permanently delete the offer!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, Delete It!',
                cancelButtonText: 'No, Keep It',
                customClass: {
                    popup: 'swal-2025-popup',
                    title: 'swal-2025-title',
                    content: 'swal-2025-text',
                    confirmButton: 'swal-2025-confirm',
                    cancelButton: 'swal-2025-cancel'
                },
                buttonsStyling: false,
                animation: true
            }).then((result) => {
                if (result.isConfirmed) {
                    this.submit();
                }
            });
        });
    });


    // Toggle Product/Category Fields
    function toggleTarget(offerId) {
        console.log("16. toggleTarget called with offerId:", offerId);
        const suffix = offerId ? offerId : '';
        const applicableTo = document.getElementById(`applicableTo${suffix}`).value;
        const productField = document.getElementById(`productField${suffix}`);
        const categoryField = document.getElementById(`categoryField${suffix}`);

        console.log("17. ApplicableTo value:", applicableTo);
        if (productField && categoryField) {
            productField.style.display = applicableTo === 'product' ? 'block' : 'none';
            categoryField.style.display = applicableTo === 'category' ? 'block' : 'none';
            console.log("18. Fields toggled - Product:", productField.style.display, "Category:", categoryField.style.display);
        } else {
            console.error("19. Field not found - Product:", productField, "Category:", categoryField);
        }
    }

    // Validation for Add Offer
    function validateAddForm() {
        console.log("20. Validating addOfferForm");
        let isValid = true;

        const discountValue = document.getElementById('discountValue').value;
        const discountError = document.getElementById('discountValueError');
        if (!discountValue || discountValue < 0 || discountValue > 100) {
            discountError.textContent = 'Discount must be between 0 and 100';
            isValid = false;
        } else {
            discountError.textContent = '';
        }

        const applicableTo = document.getElementById('applicableTo').value;
        const applicableError = document.getElementById('applicableToError');
        if (!applicableTo) {
            applicableError.textContent = 'Please select an option';
            isValid = false;
        } else {
            applicableError.textContent = '';
        }

        if (applicableTo === 'product') {
            const productId = document.getElementById('productId').value;
            const productError = document.getElementById('productIdError');
            if (!productId) {
                productError.textContent = 'Please select a product';
                isValid = false;
            } else {
                productError.textContent = '';
            }
        } else if (applicableTo === 'category') {
            const categoryId = document.getElementById('categoryId').value;
            const categoryError = document.getElementById('categoryIdError');
            if (!categoryId) {
                categoryError.textContent = 'Please select a category';
                isValid = false;
            } else {
                categoryError.textContent = '';
            }
        }

        const expiryDate = document.getElementById('expiryDate').value;
        const expiryError = document.getElementById('expiryDateError');
        const today = new Date().toISOString().split('T')[0];
        if (!expiryDate || expiryDate < today) {
            expiryError.textContent = 'Expiry date must be today or later';
            isValid = false;
        } else {
            expiryError.textContent = '';
        }

        console.log("21. Add form validation result:", isValid);
        return isValid;
    }

    // Validation for Edit Offer
    function validateEditForm(offerId) {
        console.log("22. Validating editOfferForm for offerId:", offerId);
        let isValid = true;

        const discountValue = document.getElementById(`discountValue${offerId}`).value;
        const discountError = document.getElementById(`discountValueError${offerId}`);
        if (!discountValue || discountValue < 0 || discountValue > 100) {
            discountError.textContent = 'Discount must be between 0 and 100';
            isValid = false;
        } else {
            discountError.textContent = '';
        }

        const applicableTo = document.getElementById(`applicableTo${offerId}`).value;
        const applicableError = document.getElementById(`applicableToError${offerId}`);
        if (!applicableTo) {
            applicableError.textContent = 'Please select an option';
            isValid = false;
        } else {
            applicableError.textContent = '';
        }

        if (applicableTo === 'product') {
            const productId = document.getElementById(`productId${offerId}`).value;
            const productError = document.getElementById(`productIdError${offerId}`);
            if (!productId) {
                productError.textContent = 'Please select a product';
                isValid = false;
            } else {
                productError.textContent = '';
            }
        } else if (applicableTo === 'category') {
            const categoryId = document.getElementById(`categoryId${offerId}`).value;
            const categoryError = document.getElementById(`categoryIdError${offerId}`);
            if (!categoryId) {
                categoryError.textContent = 'Please select a category';
                isValid = false;
            } else {
                categoryError.textContent = '';
            }
        }

        const expiryDate = document.getElementById(`expiryDate${offerId}`).value;
        const expiryError = document.getElementById(`expiryDateError${offerId}`);
        const today = new Date().toISOString().split('T')[0];
        if (!expiryDate || expiryDate < today) {
            expiryError.textContent = 'Expiry date must be today or later';
            isValid = false;
        } else {
            expiryError.textContent = '';
        }

        console.log("23. Edit form validation result:", isValid);
        return isValid;
    }
    
    
    </script>
</body>
</html>