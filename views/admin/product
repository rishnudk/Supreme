    <script>
        console.log("Checking if script is executing...");
    </script>
    




    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    console.log("Checking if script is executing...");


    function cancelCrop() {
    console.log("Cropping cancelled");
    document.getElementById('cropperModal').style.display = 'none';
    if (cropper) {
        cropper.destroy();
        cropper = null;
    }
}


// Check if CropperJS is loaded
console.log("CropperJS:", window.Cropper);

//preview image
function previewProductImage(event, index) {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function (e) {
            const previewElement = document.getElementById(`prod-preview${index}`);
            if (previewElement) {
                previewElement.src = e.target.result;
            }
        };
        reader.readAsDataURL(file);
    }
}



let cropper;
let currentImageInput;
const processedImages = new Map();
const form = document.getElementById('productForm');
console.log("Form Element:", form);

// Image Upload Handlers
document.querySelectorAll('input[type="file"]').forEach(input => {
    console.log("File input found:", input.id);
    input.addEventListener('change', function(e) {
        console.log("File input changed for:", input.id);
        const file = e.target.files[0];
        if (file && file.type.startsWith('image/')) {
            console.log("Valid image selected:", file.name);
            currentImageInput = input;
            const reader = new FileReader();
            reader.onload = function(e) {
                console.log("Image loaded for cropping");
                showCropper(e.target.result);
            };
            reader.readAsDataURL(file);
        }
    });
});


// document.querySelectorAll('.remove-image').forEach(button => {
//     console.log("Remove button found:", button.dataset.index);
//     button.addEventListener('click', function() {
//         console.log("Remove button clicked for index:", this.dataset.index);
//         const index = this.dataset.index;
//         const inputElement = document.getElementById(`image${index}`);
//         const previewElement = document.getElementById(`preview${index}`);
//         const uploadLabel = inputElement.parentElement;

//         inputElement.value = '';
//         previewElement.style.display = 'none';
//         uploadLabel.style.display = 'block';
//         this.style.display = 'none';
//         processedImages.delete(`image${index}`);
//     });
// });


function cropImage() {
    console.log("✅ cropImage() function called!");

    if (!cropper) {
        console.error("❌ Cropper instance not found!");
        return;
    }

    const canvas = cropper.getCroppedCanvas({
        width: 600,
        height: 600
    });

    if (!canvas) {
        console.error("❌ Cropping failed. Canvas not created.");
        return;
    }

    canvas.toBlob(blob => {
        if (!blob) {
            console.error("❌ Blob creation failed.");
            return;
        }
        console.log("✅ Image cropped and converted to blob");

        const index = currentImageInput.id.split('-').pop();
        console.log(`🆔 Extracted index: ${index}`);

        const previewElement = document.getElementById(`prod-preview${index}`);
        if (!previewElement) {
            console.error(`❌ Preview element not found for index ${index}`);
            return;
        }

        const formData = new FormData();
        formData.append("image", blob);

        console.log("📤 Sending image to backend for Cloudinary upload...");

        fetch("/upload", {
            method: "POST",
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.imageUrl) {
                console.log("✅ Cloudinary URL received:", data.imageUrl);
                processedImages.set(currentImageInput.id, data.imageUrl);
                previewElement.src = data.imageUrl;
                previewElement.style.display = 'block';
            } else {
                console.error("❌ No URL returned from server:", data);
            }
        })
        .catch(error => console.error("❌ Error uploading image:", error));

        document.getElementById('cropperModal').style.display = 'none';
        cropper.destroy();
        cropper = null; // Avoid memory leaks
    }, 'image/jpeg', 0.8);
}









function showCropper(imageSrc, index) {
    console.log("Showing cropper modal",index);
    const modal = document.getElementById('cropperModal');
    const cropperImage = document.getElementById('cropperImage');

    modal.style.display = 'block';
    cropperImage.src = imageSrc;

    if (cropper) {
        cropper.destroy();
    }

    cropper = new Cropper(cropperImage, {
        aspectRatio: 1,
        viewMode: 2,
        autoCropArea: 1,
        responsive: true,
        restore: false
    });
}







function cropImage() {
    console.log("✅ cropImage() function called!");

    if (!cropper) {
        console.error("❌ Cropper instance not found!");
        return;
    }

    console.log("Cropping image...");
    const canvas = cropper.getCroppedCanvas({
        width: 600,
        height: 600
    });

    if (!canvas) {
        console.error("❌ Cropping failed. Canvas not created.");
        return;
    }

    canvas.toBlob(blob => {
        if (!blob) {
            console.error("❌ Blob creation failed.");
            return;
        }
        console.log("✅ Image cropped and converted to blob");

        if (!currentImageInput) {
            console.error("❌ currentImageInput is undefined!");
            return;
        }

        const index = currentImageInput.id.split('-').pop();
        console.log(`🆔 Extracted index: ${index}`);

        const previewElement = document.getElementById(`prod-preview${index}`);
        if (!previewElement) {
            console.error(`❌ Preview element not found for index ${index}`);
            return;
        }

        const uploadBox = currentImageInput.closest('.prod-image-upload-box');
        if (!uploadBox) {
            console.error("❌ Upload box not found!");
            return;
        }

        const uploadLabel = uploadBox.querySelector('.prod-upload-btn');
        const removeButton = uploadBox.querySelector('.remove-image');

        console.log("Uploading to Cloudinary...");
        uploadToCloudinary(blob).then(url => {
            if (!url) {
                console.error("❌ Cloudinary upload failed!");
                return;
            }
            console.log("✅ Uploaded to Cloudinary:", url);

            processedImages.set(currentImageInput.id, url);
            previewElement.src = url;
            previewElement.style.display = 'block';

            if (uploadLabel) uploadLabel.style.display = 'none';
            if (removeButton) removeButton.style.display = 'block';
        });

        console.log("🛠 currentImageInput:", currentImageInput ? currentImageInput.id : "undefined");


        document.getElementById('cropperModal').style.display = 'none';
        cropper.destroy();
        cropper = null; // Avoid memory leaks
    }, 'image/jpeg', 0.8);
}


















// function validateForm() {
//     console.log("Validating form...");
//     let isValid = true;
//     const required = form.querySelectorAll('[required]');
//     console.log("Required fields found:", required.length);

//     document.querySelectorAll('.error-message').forEach(error => {
//         error.textContent = '';
//     });

//     required.forEach(field => {
//         const errorDiv = field.nextElementSibling;
//         if (!field.value.trim()) {
//             console.log("Validation error for field:", field.name);
//             errorDiv.textContent = `${field.name} is required`;
//             isValid = false;
//         }
//     });

//     const price = document.getElementById('price');
//     if (price.value && parseFloat(price.value) <= 0) {
//         console.log("Validation error: Price must be greater than 0");
//         price.nextElementSibling.textContent = 'Price must be greater than 0';
//         isValid = false;
//     }

//     if (processedImages.size === 0) {
//         console.log("Validation error: No images uploaded");
//         const imageError = document.querySelector('.image-upload-container').nextElementSibling;
//         imageError.textContent = 'At least one product image is required';
//         isValid = false;
//     }

//     return isValid;
// }

// form.addEventListener('submit', async function(e) {
//     e.preventDefault();
//     console.log("Form submission triggered");

//     if (!validateForm()) {
//         console.log("Form validation failed");
//         return;
//     }

//     const formData = new FormData();
//     formData.append('name', document.getElementById('name').value);
//     formData.append('brand', document.getElementById('brand').value);
//     formData.append('price', document.getElementById('price').value);
//     formData.append('description', document.getElementById('description').value);
//     formData.append('category', document.getElementById('category').value);
//     formData.append('status', document.getElementById('status').value);


//     const variants = [];
// document.querySelectorAll(".variant-item").forEach((item) => {
//   const color = item.querySelector('input[name="Color"]').value;
//   const stock = item.querySelector('input[name="Stock"]').value;
//   if (color && stock) {
//     variants.push({ color, stock });
//   }
// });


// formData.append("variants", JSON.stringify(variants));


// processedImages.forEach((blob, key) => {
//     const fileType = blob.type.split("/")[1]; 
//     formData.append("images", blob, `image_${key}.${fileType}`);
// });

    
//     console.log("Final form data:", [...formData.entries()]);

// try{
//     const response = await fetch("/admin/products/update/:id", {
//         method: "POST",
//         body: formData,
//     });

//     const result = await response.json();
//     console.log("📥 Server Response:", result);

//     // ✅ Handle Success
//     if (response.ok) {
//     console.log("✅ Product saved successfully");
//     form.reset();
//     processedImages.clear();

//     Swal.fire({
//         title: "Success!",
//         text: "Product saved successfully",
//         icon: "success",
//         confirmButtonText: "OK"
//     });
// } else {
//     console.error("❌ Error:", result.error);

//     Swal.fire({
//         title: "Error!",
//         text: result.error || "Something went wrong!",
//         icon: "error",
//         confirmButtonText: "Try Again"
//     });
// }

// } catch (error) {
//     console.error("❌ Error saving product:", error);
// }

// });


// Fetch Product Data & Pre-Fill Form Fields
async function fetchProduct(productId) {
  try {
    const response = await fetch(`/admin/products/edit/${productId}`);
    const product = await response.json();

    if (!response.ok) {
      throw new Error(product.error);
    }

    document.getElementById("name").value = product.name;
    document.getElementById("brand").value = product.brand;
    document.getElementById("price").value = product.price;
    document.getElementById("description").value = product.description;
    document.getElementById("category").value = product.category._id;
    document.getElementById("status").value = product.status;

    const variantsContainer = document.getElementById("variant-list");
    variantsContainer.innerHTML = "";
    product.variants.forEach((variant) => {
      const variantHTML = `
        <div class="variant-item">
          <input type="text" name="Color" value="${variant.color}" placeholder="Color">
          <input type="number" name="Stock" value="${variant.stock}" placeholder="Stock">
        </div>
      `;
      variantsContainer.insertAdjacentHTML("beforeend", variantHTML);
    });

    console.log("✅ Product data loaded:", product);
  } catch (error) {
    console.error("❌ Error fetching product:", error);
  }
}


//calling editing a product
document.addEventListener("DOMContentLoaded", function () {
  const productId = new URLSearchParams(window.location.search).get("id");
  if (productId) {
    fetchProduct(productId);
  }
});

























</script>
<!-- <script src="config/u.js"></script> -->