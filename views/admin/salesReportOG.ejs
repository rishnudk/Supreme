<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sales Report Dashboard | Admin Panel</title>
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
    <!-- DateRangePicker CSS -->
    <!-- <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css"> -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Custom CSS -->
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --success-color: #4cc9f0;
            --info-color: #4895ef;
            --warning-color: #f72585;
            --danger-color: #e63946;
            --light-color: #f8f9fa;
            --dark-color: #212529;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f6f9fc;
            color: #333;
        }
        
        .sidebar {
            background-color: #fff;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.05);
            height: 100vh;
            position: fixed;
            width: 250px;
            z-index: 100;
        }
        
        .main-content {
            margin-left: 250px;
            padding: 20px;
        }
        
        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s, box-shadow 0.3s;
            margin-bottom: 20px;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        }
        
        .card-header {
            background-color: transparent;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            padding: 15px 20px;
        }
        
        .stat-card {
            border-left: 5px solid var(--primary-color);
            padding: 20px;
        }
        
        .stat-card.sales {
            border-left-color: var(--success-color);
        }
        
        .stat-card.orders {
            border-left-color: var(--info-color);
        }
        
        .stat-card.discount {
            border-left-color: var(--warning-color);
        }
        
        .stat-icon {
            background-color: rgba(67, 97, 238, 0.1);
            border-radius: 10px;
            color: var(--primary-color);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.8rem;
            height: 50px;
            width: 50px;
        }
        
        .stat-icon.sales {
            background-color: rgba(76, 201, 240, 0.1);
            color: var(--success-color);
        }
        
        .stat-icon.orders {
            background-color: rgba(72, 149, 239, 0.1);
            color: var(--info-color);
        }
        
        .stat-icon.discount {
            background-color: rgba(247, 37, 133, 0.1);
            color: var(--warning-color);
        }
        
        .stat-title {
            color: #6c757d;
            font-size: 0.9rem;
            font-weight: 500;
            text-transform: uppercase;
        }
        
        .stat-value {
            color: #333;
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 5px;
        }
        
        .stat-percentage {
            font-size: 0.8rem;
        }
        
        .stat-percentage.positive {
            color: #10b981;
        }
        
        .stat-percentage.negative {
            color: #ef4444;
        }
        
        .btn-custom {
            background-color: var(--primary-color);
            border: none;
            border-radius: 8px;
            color: white;
            padding: 8px 15px;
            transition: all 0.3s;
        }
        
        .btn-custom:hover {
            background-color: var(--secondary-color);
            color: white;
        }
        
        .btn-custom.btn-outline {
            background-color: transparent;
            border: 1px solid var(--primary-color);
            color: var(--primary-color);
        }
        
        .btn-custom.btn-outline:hover {
            background-color: var(--primary-color);
            color: white;
        }
        
        .table {
            border-radius: 10px;
            overflow: hidden;
        }
        
        .table th {
            background-color: #f8f9fa;
            border-top: none;
            font-weight: 600;
            padding: 12px;
        }
        
        .table td {
            padding: 12px;
            vertical-align: middle;
        }
        
        .nav-link {
            color: #6c757d;
            font-weight: 500;
            padding: 12px 20px;
            transition: all 0.3s;
        }
        
        .nav-link:hover, .nav-link.active {
            background-color: rgba(67, 97, 238, 0.1);
            color: var(--primary-color);
        }
        
        .nav-link i {
            margin-right: 10px;
        }
        
        .dropdown-menu {
            border: none;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body>



    <%- include('../partials/adminSidebar') %>


    <!-- Sidebar -->


    

    <!-- Main Content -->
    <div class="main-content">
        <!-- Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h4 class="mb-1">Sales Report</h4>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="#" class="text-decoration-none">Dashboard</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Sales Report</li>
                    </ol>
                </nav>
            </div>
            
            <div class="d-flex">
                <div class="dropdown me-2">
                    <button class="btn btn-custom btn-outline dropdown-toggle" type="button" id="downloadReport" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-download"></i> Download
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="downloadReport">
                        <li><a class="dropdown-item" href="#" id="downloadPdf"><i class="bi bi-file-earmark-pdf"></i> PDF</a></li>
                        <li><a class="dropdown-item" href="#" id="downloadExcel"><i class="bi bi-file-earmark-excel"></i> Excel</a></li>
                    </ul>
                </div>
                
                <button class="btn btn-custom">
                    <i class="bi bi-sliders"></i> Advanced Filters
                </button>
            </div>
        </div>
        
        <!-- Filters -->



        <div class="container mt-4">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Date Range</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-calendar"></i></span>
                                <input type="text" class="form-control" id="dateRangePicker" 
                                       value="<%= startDate && endDate ? `${startDate} - ${endDate}` : '' %>">
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">Quick Select</label>
                            <select class="form-select" id="quickDateSelect">
                                <option value="custom" <%= quickSelect === 'custom' ? 'selected' : '' %>>Custom Range</option>
                                <option value="today" <%= quickSelect === 'today' ? 'selected' : '' %>>Today</option>
                                <option value="last7days" <%= quickSelect === 'last7days' ? 'selected' : '' %>>Last 7 Days</option>
                                <option value="last30days" <%= quickSelect === 'last30days' ? 'selected' : '' %>>Last 30 Days</option>
                                <option value="year" <%= quickSelect === 'year' ? 'selected' : '' %>>Year</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
    
            <!-- Display Report Data -->
            <div class="card">
                <div class="card-body">
                    <h5>Sales Summary</h5>
                    <p>Total Orders: <%= report.totalOrders %></p>
                    <p>Total Amount: <%= report.totalAmount.toFixed(2) %></p>
                    <p>Total Discount: <%= report.totalDiscount.toFixed(2) %></p>
                    <p>Coupon Discount: <%= report.totalCouponDiscount.toFixed(2) %></p>
                    <p>Offer Discount: <%= report.totalOfferDiscount.toFixed(2) %></p>
                    
                    <a href="/admin/salesReport?quickSelect=<%= quickSelect %>&download=pdf" class="btn btn-primary">Download PDF</a>
                    <a href="/admin/salesReport?quickSelect=<%= quickSelect %>&download=excel" class="btn btn-success">Download Excel</a>
                </div>
            </div>
        </div>



        <!-- Stats Cards -->



<!--         
        <div class="row g-3 mb-4">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body stat-card sales">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="stat-title">Total Sales</p>
                                <h3 class="stat-value">$42,856.89</h3>
                                <span class="stat-percentage positive">
                                    <i class="bi bi-arrow-up"></i> 12.5% vs prev period
                                </span>
                            </div>
                            <div class="stat-icon sales">
                                <i class="bi bi-currency-dollar"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body stat-card orders">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="stat-title">Orders</p>
                                <h3 class="stat-value">1,285</h3>
                                <span class="stat-percentage positive">
                                    <i class="bi bi-arrow-up"></i> 8.3% vs prev period
                                </span>
                            </div>
                            <div class="stat-icon orders">
                                <i class="bi bi-bag"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body stat-card discount">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <p class="stat-title">Discounts</p>
                                <h3 class="stat-value">$5,432.10</h3>
                                <span class="stat-percentage negative">
                                    <i class="bi bi-arrow-down"></i> 3.2% vs prev period
                                </span>
                            </div>
                            <div class="stat-icon discount">
                                <i class="bi bi-tag"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
 -->




 <div class="row g-3 mb-4">
    <div class="col-md-4">
        <div class="card">
            <div class="card-body stat-card sales">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <p class="stat-title">Total Sales</p>
                        <h3 class="stat-value"><%= report.totalAmount ? report.totalAmount.toFixed(2) : '0.00' %></h3>
                        <span class="stat-percentage positive">
                            <i class="bi bi-arrow-up"></i> N/A vs prev period
                        </span>
                    </div>
                    <div class="stat-icon sales">
                        <i class="bi bi-currency-dollar"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-body stat-card orders">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <p class="stat-title">Orders</p>
                        <h3 class="stat-value"><%= report.totalOrders || 0 %></h3>
                        <span class="stat-percentage positive">
                            <i class="bi bi-arrow-up"></i> N/A vs prev period
                        </span>
                    </div>
                    <div class="stat-icon orders">
                        <i class="bi bi-bag"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-body stat-card discount">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <p class="stat-title">Discounts</p>
                        <h3 class="stat-value"><%= report.totalDiscount ? report.totalDiscount.toFixed(2) : '0.00' %></h3>
                        <span class="stat-percentage negative">
                            <i class="bi bi-arrow-down"></i> N/A vs prev period
                        </span>
                    </div>
                    <div class="stat-icon discount">
                        <i class="bi bi-tag"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>










        <!-- Sales Graph -->
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Sales Overview</h5>
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-sm btn-outline-secondary active" data-graph-period="daily">Daily</button>
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-graph-period="weekly">Weekly</button>
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-graph-period="monthly">Monthly</button>

                </div>
            </div>
            <div class="card-body">
                <canvas id="salesChart" style="width: 100%; height: 350px;"></canvas>
            </div>
        </div>
        
        <!-- Detailed Sales Report -->
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Detailed Sales Report</h5>
                <div class="input-group" style="width: 250px;">
                    <input type="text" class="form-control" placeholder="Search...">
                    <button class="btn btn-outline-secondary" type="button">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>



            <div class="card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Date</th>
                                    <th>Customer</th>
                                    <th>Products</th>
                                    <th>Subtotal</th>
                                    <th>Discount</th>
                                    <th>Coupon</th>
                                    <th>Total</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (report.orders && report.orders.length > 0) { %>
                                    <% report.orders.forEach(order => { %>
                                        <tr>
                                            <td>#ORD-<%= order.orderId || 'N/A' %></td>
                                            <td><%= new Date(order.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) %></td>
                                            <td><%= order.user?.name || 'Unknown' %></td>
                                            <td><%= order.products?.length || 0 %> item<%= order.products?.length !== 1 ? 's' : '' %></td>
                                            <td><%= order.originalAmount ? order.originalAmount.toFixed(2) : '0.00' %></td>
                                            <td><%= order.offerDiscount ? order.offerDiscount.toFixed(2) : '0.00' %></td>
                                            <td><%= order.couponCode %> <%= order.couponDiscount ? `(-$${order.couponDiscount.toFixed(2)})` : '' %></td>
                                            <td><%= order.totalAmount ? order.totalAmount.toFixed(2) : '0.00' %></td>
                                            <td>
                                                <span class="badge <%= 
                                                    order.status === 'Delivered' ? 'bg-success' : 
                                                    order.status === 'Shipped' ? 'bg-info' : 
                                                    order.status === 'Processing' ? 'bg-warning' : 
                                                    order.status === 'Cancelled' ? 'bg-danger' : 'bg-secondary' %>">
                                                    <%= order.status %>
                                                </span>
                                            </td>
                                        </tr>
                                    <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="9" class="text-center">No orders found for the selected period.</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
    
                    <nav>
                        <ul class="pagination justify-content-center">
                            <% 
                                const totalPages = Math.ceil(totalOrders / limit);
                                const maxPagesToShow = 5; // Adjust as needed
                                let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));
                                let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);
                                if (endPage - startPage + 1 < maxPagesToShow) {
                                    startPage = Math.max(1, endPage - maxPagesToShow + 1);
                                }
                            %>
                            <% for (let i = startPage; i <= endPage; i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                    <a class="page-link" href="/admin/salesReport?quickSelect=<%= quickSelect %>&startDate=<%= startDate %>&endDate=<%= endDate %>&page=<%= i %>&limit=<%= limit %>"><%= i %></a>
                                </li>
                            <% } %>
                        </ul>
                    </nav>



                </div>
            </div>
        </div>
       
       
        </div>
        
       



    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.0/dist/chart.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jspdf@2.5.1/dist/jspdf.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js"></script>
   
    
    <!-- Custom JavaScript -->
    <script>


const dateRangePicker = flatpickr("#dateRangePicker", {
        mode: "range",
        dateFormat: "Y-m-d",
        defaultDate: ["<%= startDate %>", "<%= endDate %>"],
        onChange: function(selectedDates) {
            if (selectedDates.length === 2) {
                const startDate = selectedDates[0].toISOString().split('T')[0];
                const endDate = selectedDates[1].toISOString().split('T')[0];
                document.getElementById('quickDateSelect').value = 'custom';
                updateReport('custom', startDate, endDate);
            }
        }
    });

    document.getElementById('quickDateSelect').addEventListener('change', function(e) {
        const quickSelect = e.target.value;
        if (quickSelect !== 'custom') {
            dateRangePicker.clear();
            updateReport(quickSelect);
        }
        // No need to enable/disable picker; it's always usable
    });

    function updateReport(quickSelect, startDate, endDate) {
        let url = `/admin/salesReport?quickSelect=${quickSelect}`;
        if (quickSelect === 'custom' && startDate && endDate) {
            url += `&startDate=${startDate}&endDate=${endDate}`;
        }
        console.log('Navigating to:', url); // Debug log
        window.location.href = url;
    }






     
        
        // Initialize sales chart
        const ctx = document.getElementById('salesChart').getContext('2d');
        let currentChart = null;
        
        // Chart data
        const dailyData = {
            labels: ['Mar 11', 'Mar 12', 'Mar 13', 'Mar 14', 'Mar 15', 'Mar 16', 'Mar 17'],
            datasets: [
                {
                    label: 'Sales ($)',
                    data: [3750, 4250, 5125, 4750, 6250, 8500, 9750],
                    borderColor: '#4cc9f0',
                    backgroundColor: 'rgba(76, 201, 240, 0.1)',
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true
                },
                {
                    label: 'Discounts ($)',
                    data: [375, 480, 615, 525, 750, 950, 1150],
                    borderColor: '#f72585',
                    backgroundColor: 'rgba(247, 37, 133, 0.1)',
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true
                }
            ]
        };
        
        const weeklyData = {
            labels: ['Week 6', 'Week 7', 'Week 8', 'Week 9', 'Week 10', 'Week 11'],
            datasets: [
                {
                    label: 'Sales ($)',
                    data: [24500, 28750, 32125, 35750, 38250, 42500],
                    borderColor: '#4cc9f0',
                    backgroundColor: 'rgba(76, 201, 240, 0.1)',
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true
                },
                {
                    label: 'Discounts ($)',
                    data: [2450, 3100, 3550, 3950, 4200, 4785],
                    borderColor: '#f72585',
                    backgroundColor: 'rgba(247, 37, 133, 0.1)',
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true
                }
            ]
        };
        
        const monthlyData = {
            labels: ['Oct', 'Nov', 'Dec', 'Jan', 'Feb', 'Mar'],
            datasets: [
                {
                    label: 'Sales ($)',
                    data: [98750, 125000, 175250, 135750, 148250, 168500],
                    borderColor: '#4cc9f0',
                    backgroundColor: 'rgba(76,201, 240, 0.1)',
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true
                },
                {
                    label: 'Discounts ($)',
                    data: [10250, 14750, 21250, 15750, 17250, 18500],
                    borderColor: '#f72585',
                    backgroundColor: 'rgba(247, 37, 133, 0.1)',
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true
                }
            ]
        };
        
        // Chart options
        const chartOptions = {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        display: true,
                        color: 'rgba(0, 0, 0, 0.05)'
                    },
                    ticks: {
                        callback: function(value) {
                            return '$' + value.toLocaleString();
                        }
                    }
                },
                x: {
                    grid: {
                        display: false
                    }
                }
            },
            plugins: {
                legend: {
                    position: 'top',
                    labels: {
                        boxWidth: 15,
                        padding: 15
                    }
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            return context.dataset.label + ': $' + context.parsed.y.toLocaleString();
                        }
                    }
                }
            },
            interaction: {
                intersect: false,
                mode: 'index'
            }
        };
        
        // Initialize chart with daily data
        currentChart = new Chart(ctx, {
            type: 'line',
            data: dailyData,
            options: chartOptions
        });
        
        // Switch between daily, weekly, monthly data
        document.querySelectorAll('[data-graph-period]').forEach(button => {
            button.addEventListener('click', function() {
                const period = this.getAttribute('data-graph-period');
                let data;
                
                // Remove active class from all buttons
                document.querySelectorAll('[data-graph-period]').forEach(btn => {
                    btn.classList.remove('active');
                });
                
                // Add active class to clicked button
                this.classList.add('active');
                
                // Set data based on period
                switch(period) {
                    case 'daily':
                        data = dailyData;
                        break;
                    case 'weekly':
                        data = weeklyData;
                        break;
                    case 'monthly':
                        data = monthlyData;
                        break;
                }
                
                // Update chart
                if (currentChart) {
                    currentChart.destroy();
                }
                
                currentChart = new Chart(ctx, {
                    type: 'line',
                    data: data,
                    options: chartOptions
                });
            });
        });
        
        // Function to update dashboard based on date range
        function updateDashboard(start, end) {
            console.log('Updating dashboard for date range:', start.format('YYYY-MM-DD'), 'to', end.format('YYYY-MM-DD'));
            
            // In a real application, this would fetch data from the server
            // For this demo, we'll just update the date range text
            document.querySelector('.breadcrumb-item.active').textContent = 'Sales Report: ' + start.format('MMM D, YYYY') + ' - ' + end.format('MMM D, YYYY');
            
            // Simulate loading state
            const loadingToast = new bootstrap.Toast(document.getElementById('loadingToast'));
            loadingToast.show();
            
            // In a real application, you would fetch data here
            setTimeout(() => {
                // Update would happen here
                loadingToast.hide();
            }, 1000);
        }
        
        // Handle date range picker change
        $('#dateRangePicker').on('apply.daterangepicker', function(ev, picker) {
            updateDashboard(picker.startDate, picker.endDate);
            
            // Reset quick select to custom
            document.getElementById('quickDateSelect').value = 'custom';
        });
        
        // Handle download PDF
        document.getElementById('downloadPdf').addEventListener('click', function(e) {
            e.preventDefault();
            
            // In a real application, this would generate a PDF
            alert('Generating PDF report...');
            
            // Get date range
            const dateRange = $('#dateRangePicker').val();
            console.log('Generating PDF report for date range:', dateRange);
            
            // This would be replaced with actual PDF generation code
            setTimeout(() => {
                alert('PDF downloaded successfully!');
            }, 1000);
        });
        
        // Handle download Excel
        document.getElementById('downloadExcel').addEventListener('click', function(e) {
            e.preventDefault();
            
            // In a real application, this would generate an Excel file
            alert('Generating Excel report...');
            
            // Get date range
            const dateRange = $('#dateRangePicker').val();
            console.log('Generating Excel report for date range:', dateRange);
            
            // This would be replaced with actual Excel generation code
            setTimeout(() => {
                alert('Excel file downloaded successfully!');
            }, 1000);
        });
    </script>
    
   
</body>
</html>