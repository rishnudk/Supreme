<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Wallet</title>
    <!-- Include FontAwesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/styles.css"> <!-- Your custom CSS -->



       
    <style>
        :root {
            --primary-color: #2A3F54;
            --secondary-color: #F4F5F7;
            --accent-color: #E67E22;
            --success-color: #28a745;
            --danger-color: #dc3545;
            --warning-color: #ffc107;
            --info-color: #17a2b8;
            --text-color: #333;
            --light-text: #6C757D;
            --border-radius: 16px;
            --card-border-radius: 20px;
            --box-shadow: 0 10px 30px rgba(0,0,0,0.08);
            --transition: all 0.3s ease;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #F8F9FA;
            color: var(--text-color);
        }
        
        .account-container {
            max-width: 1400px;
            margin: 2rem auto;
            padding: 0 1rem;
        }
        
        .page-title {
            font-weight: 700;
            margin-bottom: 2rem;
            color: var(--primary-color);
            border-bottom: 2px solid var(--secondary-color);
            padding-bottom: 1rem;
        }


        .sidebar {
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        padding: 1.5rem;
        height: 100%;
        transition: var(--transition);
    }
    
    .sidebar-section {
        margin-bottom: 2rem;
    }
    
    .sidebar-title {
        font-weight: 600;
        margin-bottom: 1rem;
        color: var(--primary-color);
        padding-bottom: 0.5rem;
        border-bottom: 1px solid var(--secondary-color);
    }
    
    .sidebar-menu {
        list-style: none;
        padding: 0;
    }
    
    .sidebar-menu li {
        margin-bottom: 0.8rem;
    }
    
    .sidebar-menu a {
        display: flex;
        align-items: center;
        color: var(--text-color);
        text-decoration: none;
        padding: 0.8rem;
        border-radius: 12px;
        transition: var(--transition);
    }
    
    .sidebar-menu a:hover, .sidebar-menu a.active {
        background-color: var(--secondary-color);
        color: var(--primary-color);
        transform: translateX(5px);
    }
    
    .sidebar-menu i {
        margin-right: 10px;
        color: var(--primary-color);
        font-size: 1.2rem;
    }
    
    .invite-subtitle {
        font-size: 0.75rem;
        color: var(--light-text);
        margin-left: 1.8rem;
    }
    
    @media (max-width: 991.98px) {
        .sidebar {
            margin-bottom: 2rem;
        }
    }






    /* Add these styles to your existing <style> tag */
        .wallet-container {
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow);
        padding: 1.75rem;
        height: 100%;
    }
    
    .wallet-overview {
        margin-bottom: 2rem;
    }
    
    .balance-card {
        background: linear-gradient(120deg, var(--primary-color), #1A2A36);
        color: white;
        border-radius: var(--card-border-radius);
        padding: 2rem;
        height: 100%;
        position: relative;
        overflow: hidden;
        box-shadow: var(--box-shadow);
    }
    
    .balance-card::before {
        content: '';
        position: absolute;
        top: -50px;
        right: -50px;
        width: 200px;
        height: 200px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.05);
        z-index: 1;
    }
    
    .balance-card::after {
        content: '';
        position: absolute;
        bottom: -80px;
        left: -80px;
        width: 300px;
        height: 300px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.03);
        z-index: 1;
    }
    
    .balance-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        position: relative;
        z-index: 2;
    }
    
    .balance-header h2 {
        font-size: 1.25rem;
        margin: 0;
        font-weight: 400;
    }
    
    .action-button {
        background: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
    }
    
    .action-button:hover {
        background: rgba(255, 255, 255, 0.3);
    }
    
    .balance-amount {
        margin-bottom: 2rem;
        position: relative;
        z-index: 2;
    }
    
    .balance-amount h1 {
        font-size: 3rem;
        font-weight: 700;
        margin: 0;
    }
    
    .balance-actions {
        display: flex;
        gap: 1rem;
        position: relative;
        z-index: 2;
    }
    
    .btn-accent {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
        color: white;
        border-radius: 12px;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        transition: var(--transition);
    }
    
    .btn-accent:hover {
        background-color: #D35400;
        border-color: #D35400;
        color: white;
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .btn-outline-primary {
        color: white;
        border-color: rgba(255, 255, 255, 0.5);
        background-color: transparent;
        border-radius: 12px;
        padding: 0.75rem 1.5rem;
        font-weight: 500;
        transition: var(--transition);
    }
    
    .btn-outline-primary:hover {
        background-color: rgba(255, 255, 255, 0.1);
        border-color: white;
        color: white;
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .stat-card {
        border-radius: var(--card-border-radius);
        padding: 1.5rem;
        display: flex;
        align-items: center;
        height: 100%;
        box-shadow: var(--box-shadow);
        transition: var(--transition);
    }
    
    .stat-card:hover {
        transform: translateY(-5px);
    }
    
    .stat-card-success {
        background: linear-gradient(120deg, #28a745, #20c997);
        color: white;
    }
    
    .stat-card-danger {
        background: linear-gradient(120deg, #dc3545, #e83e8c);
        color: white;
    }
    
    .stat-card-info {
        background: linear-gradient(120deg, #17a2b8, #6610f2);
        color: white;
    }
    
    .stat-icon {
        width: 50px;
        height: 50px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }





    /* Add these styles to your existing <style> tag */
    .transaction-header {
        margin-bottom: 1.5rem;
    }
    
    .section-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--primary-color);
        margin: 0;
    }
    
    .search-box {
        width: 250px;
    }
    
    .search-box .input-group {
        border-radius: 50px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }
    
    .search-box .input-group-text {
        border-radius: 50px 0 0 50px;
        border-color: #ced4da;
        color: var(--light-text);
    }
    
    .search-box .form-control {
        border-radius: 0 50px 50px 0;
        border-color: #ced4da;
    }
    
    .search-box .form-control:focus {
        box-shadow: none;
        border-color: var(--accent-color);
    }
    
    .filter-dropdown .btn {
        border-radius: 50px;
        padding: 0.57rem 1.5rem;
        border-color: #ced4da;
    }
    
    .filter-dropdown .dropdown-menu {
        border-radius: 12px;
        padding: 0.5rem;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        border: none;
    }
    
    .filter-dropdown .dropdown-item {
        padding: 0.5rem 1rem;
        border-radius: 8px;
        transition: var(--transition);
    }
    
    .filter-dropdown .dropdown-item:hover {
        background-color: var(--secondary-color);
    }
    
    .filter-dropdown .dropdown-item.active {
        background-color: var(--accent-color);
        color: white;
    }



    .transaction-list {
        margin-bottom: 2rem;
    }
    
    .transaction-date {
        display: flex;
        align-items: center;
        margin: 1.5rem 0 1rem;
    }
    
    .transaction-date span {
        font-size: 0.9rem;
        font-weight: 600;
        color: var(--light-text);
        background-color: var(--secondary-color);
        padding: 0.25rem 1rem;
        border-radius: 50px;
    }
    
    .transaction-item {
        display: flex;
        align-items: center;
        padding: 1.25rem;
        border-radius: var(--card-border-radius);
        margin-bottom: 1rem;
        background-color: white;
        box-shadow: 0 2px 10px rgba(0,0,0,0.03);
        transition: var(--transition);
        border: 1px solid rgba(0,0,0,0.03);
    }
    
    .transaction-item:hover {
        transform: translateY(-3px);
        box-shadow: var(--box-shadow);
    }
    
    .transaction-icon {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1.25rem;
        flex-shrink: 0;
    }
    
    .transaction-icon.completed {
        background-color: #D4EDDA;
        color: #155724;
    }
    
    .transaction-icon.pending {
        background-color: #FFF3CD;
        color: #856404;
    }
    
    .transaction-icon.refunded {
        background-color: #CCE5FF;
        color: #004085;
    }
    
    .transaction-icon.cancelled {
        background-color: #F8D7DA;
        color: #721C24;
    }
    
    .transaction-icon.reward {
        background-color: #E6D1F2;
        color: #5B2C6F;
    }
    
    .transaction-details {
        display: flex;
        flex-grow: 1;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
    }
    
    .transaction-info {
        margin-right: 1rem;
    }
    
    .transaction-info h4 {
        font-size: 1rem;
        margin-bottom: 0.25rem;
        font-weight: 600;
    }
    
    .transaction-id {
        font-size: 0.85rem;
        color: var(--light-text);
        margin-bottom: 0;
    }
    
    .transaction-meta {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        flex-shrink: 0;
    }
    
    .transaction-time {
        font-size: 0.85rem;
        color: var(--light-text);
        margin-bottom: 0.25rem;
    }
    
    .transaction-status {
        font-size: 0.8rem;
        font-weight: 600;
        padding: 0.15rem 0.75rem;
        border-radius: 50px;
        margin-bottom: 0.25rem;
    }
    
    .transaction-status.completed {
        background-color: #D4EDDA;
        color: #155724;
    }
    
    .transaction-status.pending {
        background-color: #FFF3CD;
        color: #856404;
    }
    
    .transaction-status.refunded {
        background-color: #CCE5FF;
        color: #004085;
    }
    
    .transaction-status.cancelled {
        background-color: #F8D7DA;
        color: #721C24;
    }
    
    .transaction-status.reward {
        background-color: #E6D1F2;
        color: #5B2C6F;
    }
    
    .transaction-amount {
        font-size: 1.1rem;
        font-weight: 700;
    }
    
    .transaction-details .transaction-amount:first-child {
        color: #28a745;
    }
    
    .transaction-details .transaction-amount:last-child {
        color: var(--text-color);
    }
    
    @media (max-width: 767.98px) {
        .transaction-details {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .transaction-meta {
            margin-top: 0.5rem;
            align-items: flex-start;
        }
    }



 /* Add these styles to your existing <style> tag */
    .load-more {
        margin: 2rem 0;
    }
    
    .btn-outline-accent {
        color: var(--accent-color);
        border-color: var(--accent-color);
        border-radius: 50px;
        padding: 0.75rem 2rem;
        font-weight: 500;
        transition: var(--transition);
    }
    
    .btn-outline-accent:hover {
        background-color: var(--accent-color);
        color: white;
        transform: translateY(-3px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .no-more-transactions {
        color: var(--light-text);
        margin-top: 1rem;
        font-size: 0.9rem;
    }
    
    .loading-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(255, 255, 255, 0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 100;
        border-radius: var(--border-radius);
    }
    
    .spinner-container {
        text-align: center;
    }
    
    .spinner-container p {
        margin-top: 0.75rem;
        color: var(--primary-color);
    }
    
    .text-accent {
        color: var(--accent-color) !important;
    }
    
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }










    </style>





</head>
<body>


    <%- include('../partials/userNavbar') %>
    <div class="account-container">
        <h1 class="page-title">My Account</h1>
        
        <div class="row">
            <!-- Sidebar -->



            <div class="col-lg-3 col-md-4">
                <div class="sidebar">
                    <!-- Orders Section -->
                    <div class="sidebar-section">
                        <h3 class="sidebar-title">My Account</h3>
                        <ul class="sidebar-menu">
                            <li>
                                <a href="/user/account">
                                    <i class="fas fa-box"></i> Orders
                                </a>
                            </li>
                            <li>
                                <a href="/user/wallet" class="active">
                                    <i class="fas fa-wallet"></i> Wallet
                                </a>
                            </li>
                            <li>
                                <a href="/user/referral">
                                    <i class="fas fa-user-plus"></i> Invite Friends
                                </a>
                                <p class="invite-subtitle">Earn 100 points for every friend</p>
                            </li>
                          
                        </ul>
                    </div>
                    
                    <!-- Profile Section -->
                    <div class="sidebar-section">
                        <h3 class="sidebar-title">Profile</h3>
                        <ul class="sidebar-menu">
                            <li>
                                <a href="/user/profile">
                                    <i class="fas fa-user"></i> Personal Information
                                </a>
                            </li>
                            <li>
                                <a href="/user/address">
                                    <i class="fas fa-address-book"></i> Address Book
                                </a>
                            </li>
                            
                        </ul>
                    </div>
                </div>
            </div>





            <!-- Main Content -->
            <div class="col-lg-9 col-md-8">
                <div class="wallet-container">
                    <!-- Wallet Balance Overview -->
                    <div class="wallet-overview">
                        <div class="row">
                            <div class="col-xl-7 col-lg-6 mb-4">
                                <div class="balance-card">
                                    <div class="balance-header">
                                        <h2>Available Balance</h2>
                                       
                                    </div>
                                    <div class="balance-amount">
                                        <h1><%= currency %> <%= balance.toFixed(2) %></h1>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Transaction History -->
                    <div class="transaction-header">
                        <div class="row align-items-center">
                            <div class="col-lg-6 mb-3 mb-lg-0">
                                <h2 class="section-title">Transaction History</h2>
                            </div>
                        </div>
                    </div>

                    <div class="transaction-list">
                        <% if (transactions.length > 0) { %>
                            <% let currentDate = ''; %>
                            <% transactions.forEach((tx, index) => { %>
                                <% const txDate = new Date(tx.date).toLocaleDateString(); %>
                                <% if (txDate !== currentDate) { %>
                                    <% currentDate = txDate; %>
                                    <div class="transaction-date">
                                        <span><%= currentDate === new Date().toLocaleDateString() ? 'Today' : currentDate === new Date(Date.now() - 86400000).toLocaleDateString() ? 'Yesterday' : currentDate %></span>
                                    </div>
                                <% } %>

                                <div class="transaction-item">
                                    <div class="transaction-icon <%= tx.type.toLowerCase() %>">
                                        <% if (tx.type === 'debit') { %>
                                            <i class="fas fa-check"></i>
                                        <% } else if (tx.type === 'credit') { %>
                                            <i class="fas fa-clock"></i>
                                        <% } else if (tx.type === 'refund') { %>
                                            <i class="fas fa-undo"></i>
                                        <% } else if (tx.type === 'cancelled') { %>
                                            <i class="fas fa-times"></i>
                                        <% } else if (tx.type === 'reward') { %>
                                            <i class="fas fa-gift"></i>
                                        <% } %>
                                    </div>
                                    <div class="transaction-details">
                                        <div class="transaction-info">
                                            <h4><%= tx.description %></h4>
                                            <p class="transaction-id"><%= tx.orderId ? `Order #${tx.orderId.orderID}` : `Transaction #${tx._id}` %></p>
                                        </div>
                                        <div class="transaction-meta">
                                            <span class="transaction-time"><%= new Date(tx.date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %></span>
                                            <span class="transaction-status <%= tx.type.toLowerCase() %>"><%= tx.type.charAt(0).toUpperCase() + tx.type.slice(1) %></span>
                                            <span class="transaction-amount"><%= tx.amount > 0 ? `+${currency} ${tx.amount.toFixed(2)}` : `${currency} ${tx.amount.toFixed(2)}` %></span>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p>No transactions available.</p>
                        <% } %>
                    </div>

                    <!-- Load More Button -->
                    <div class="text-center load-more">
                        <button class="btn btn-outline-accent" id="loadMoreBtn">
                            <i class="fas fa-sync-alt me-2"></i> Load More Transactions
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <%- include('../partials/userFooter') %>


    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom JS for Load More -->
    <script>
        let skip = <%= transactions.length %>; // Initial skip value based on loaded transactions
        const limit = 5;

        document.getElementById('loadMoreBtn').addEventListener('click', async () => {
            try {
                const response = await fetch(`/user/wallet/transactions?skip=${skip}&limit=${limit}`);
                const data = await response.json();

                if (data.transactions.length > 0) {
                    const transactionList = document.querySelector('.transaction-list');
                    let currentDate = '';

                    data.transactions.forEach(tx => {
                        const txDate = new Date(tx.date).toLocaleDateString();
                        if (txDate !== currentDate) {
                            currentDate = txDate;
                            const dateDiv = document.createElement('div');
                            dateDiv.className = 'transaction-date';
                            dateDiv.innerHTML = `<span>${txDate === new Date().toLocaleDateString() ? 'Today' : txDate === new Date(Date.now() - 86400000).toLocaleDateString() ? 'Yesterday' : txDate}</span>`;
                            transactionList.appendChild(dateDiv);
                        }

                        const txItem = document.createElement('div');
                        txItem.className = 'transaction-item';
                        txItem.innerHTML = `
                            <div class="transaction-icon ${tx.type.toLowerCase()}">
                                ${tx.type === 'debit' ? '<i class="fas fa-check"></i>' : 
                                  tx.type === 'credit' ? '<i class="fas fa-clock"></i>' : 
                                  tx.type === 'refund' ? '<i class="fas fa-undo"></i>' : 
                                  tx.type === 'cancelled' ? '<i class="fas fa-times"></i>' : 
                                  '<i class="fas fa-gift"></i>'}
                            </div>
                            <div class="transaction-details">
                                <div class="transaction-info">
                                    <h4>${tx.description}</h4>
                                    <p class="transaction-id">${tx.orderId ? `Order #${tx.orderId}` : `Transaction #${tx._id}`}</p>
                                </div>
                                <div class="transaction-meta">
                                    <span class="transaction-time">${new Date(tx.date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>
                                    <span class="transaction-status ${tx.type.toLowerCase()}">${tx.type.charAt(0).toUpperCase() + tx.type.slice(1)}</span>
                                    <span class="transaction-amount">${tx.amount > 0 ? `+<%= currency %> ${tx.amount.toFixed(2)}` : `<%= currency %> ${tx.amount.toFixed(2)}`}</span>
                                </div>
                            </div>
                        `;
                        transactionList.appendChild(txItem);
                    });

                    skip += data.transactions.length;
                    if (data.transactions.length < limit) {
                        document.getElementById('loadMoreBtn').style.display = 'none';
                    }
                } else {
                    document.getElementById('loadMoreBtn').style.display = 'none';
                }
            } catch (error) {
                console.error('Error loading more transactions:', error);
            }
        });
    </script>
</body>
</html>