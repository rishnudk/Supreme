<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Personal Information</title>
    <!-- <link rel="stylesheet" href="/css/profile.css"> -->
  

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
   
 <!-- Bootstrap 5.3 CSS -->
 <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
 <!-- Bootstrap Icons -->
 <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.0/font/bootstrap-icons.min.css"
     rel="stylesheet">
    


 
     <style>
        /* Sidebar Styles */
.sidebar {
  background-color: #f8f9fa;
  border-radius: 8px;
  padding: 20px;
  margin-bottom: 30px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
}

.sidebar-section {
  margin-bottom: 25px;
}

.sidebar-title {
  font-size: 18px;
  font-weight: 600;
  margin-bottom: 15px;
  color: #333;
  border-bottom: 1px solid #eaeaea;
  padding-bottom: 10px;
}

.sidebar-menu {
  list-style: none;
  padding: 0;
  margin: 0;
}

.sidebar-menu li {
  margin-bottom: 10px;
}

.sidebar-menu a {
  display: flex;
  align-items: center;
  color: #555;
  text-decoration: none;
  padding: 8px 10px;
  border-radius: 6px;
  transition: all 0.2s ease;
}

.sidebar-menu a:hover {
  background-color: #f1f1f1;
  color: #111;
}

.sidebar-menu a.active {
  background-color: #e9ecef;
  color: #000;
  font-weight: 500;
}

.sidebar-menu i {
  margin-right: 10px;
  width: 20px;
  text-align: center;
}

.invite-subtitle {
  font-size: 12px;
  color: #888;
  margin: 0 0 0 30px;
  padding: 0;
}

/* Main Content Styles */
.card {
  background-color: #fff;
  border: none;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
}

.nav-tabs {
  border-bottom: 1px solid #eaeaea;
  margin-bottom: 20px;
}

.nav-tabs .nav-link {
  border: none;
  color: #555;
  font-weight: 500;
  padding: 10px 20px;
}

.nav-tabs .nav-link.active {
  color: #000;
  background-color: transparent;
  border-bottom: 2px solid #555;
}

.tab-content {
  padding: 20px 0;
}

/* Form Styles */
.form-label {
  font-size: 14px;
  margin-bottom: 6px;
  color: #333;
}

.form-control {
  border-radius: 6px;
  padding: 10px 15px;
  border: 1px solid #eaeaea;
  background-color: #f8f9fa;
}

.form-control:focus {
  box-shadow: 0 0 0 0.25rem rgba(85, 85, 85, 0.15);
  border-color: #aaa;
}

.btn {
  padding: 8px 20px;
  border-radius: 6px;
  font-weight: 500;
  transition: all 0.2s ease;
}

.btn-primary {
  background-color: #555;
  border-color: #555;
}

.btn-primary:hover {
  background-color: #444;
  border-color: #444;
}

.btn-outline-primary {
  color: #555;
  border-color: #555;
}

.btn-outline-primary:hover {
  background-color: #555;
  border-color: #555;
  color: white;
}

/* Password Field Styles */
.password-field {
  position: relative;
}

.password-toggle {
  position: absolute;
  right: 15px;
  top: 38px;
  cursor: pointer;
  color: #888;
}

.password-toggle:hover {
  color: #555;
}

/* Security Tips Card */
.card p.small, .card ul.small {
  font-size: 13px;
  line-height: 1.5;
  color: #666;
}

/* Modal Styles */
.modal-content {
  border-radius: 8px;
  border: none;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.modal-header {
  border-bottom: 1px solid #eaeaea;
  padding: 15px 20px;
}

.modal-body {
  padding: 20px;
}

.list-group {
  margin-bottom: 15px;
}

.list-group-item {
  border-color: #eaeaea;
}

/* Status Indicators (from the second example) */
.order-status {
  padding: 5px 12px;
  border-radius: 20px;
  font-size: 13px;
  font-weight: 500;
}

.order-status.pending {
  background-color: #fff9db;
  color: #e6a700;
}

.order-status.processing {
  background-color: #e7f5ff;
  color: #1971c2;
}

.order-status.confirmed {
  background-color: #ebfbee;
  color: #2b8a3e;
}

.order-status.delivered {
  background-color: #d3f9d8;
  color: #2b8a3e;
}

.order-status.cancelled {
  background-color: #ffe3e3;
  color: #c92a2a;
}

.order-status.returned {
  background-color: #f1f3f5;
  color: #495057;
}

/* Responsive Adjustments */
@media (max-width: 767.98px) {
  .sidebar {
    margin-bottom: 20px;
  }
  
  .col-md-4 .card {
    margin-top: 20px;
  }
  
  .order-header {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .order-status {
    margin-top: 10px;
  }
}
     </style>





</head>
<body>
    <%- include('../partials/userNavbar') %>

    <div class="container py-5">
        <div class="row">
            <!-- Sidebar -->

            


            <div class="col-lg-3 col-md-4">
                <div class="sidebar">
                    <!-- Orders Section -->
                    <div class="sidebar-section">
                        <h3 class="sidebar-title">My Account</h3>
                        <ul class="sidebar-menu">
                            <li>
                                <a href="/user/account">
                                    <i class="fas fa-box"></i> Orders
                                </a>
                            </li>
                            <li>
                                <a href="/user/wallet" class="active">
                                    <i class="fas fa-wallet"></i> Wallet
                                </a>
                            </li>
                            <li>
                                <a href="/user/referral">
                                    <i class="fas fa-user-plus"></i> Invite Friends
                                </a>
                                <p class="invite-subtitle">Earn 50 points for every friend</p>
                            </li>
                          
                        </ul>
                    </div>
                    
                    <!-- Profile Section -->
                    <div class="sidebar-section">
                        <h3 class="sidebar-title">Profile</h3>
                        <ul class="sidebar-menu">
                            <li>
                                <a href="/user/profile">
                                    <i class="fas fa-user"></i> Personal Information
                                </a>
                            </li>
                            <li>
                                <a href="/user/address">
                                    <i class="fas fa-address-book"></i> Address Book
                                </a>
                            </li>
                            
                        </ul>
                    </div>
                </div>
            </div>





            <!-- Main Content -->
            <div class="col-lg-9">
                <div class="card p-4 mb-4">
                    <h4 class="mb-4 fw-bold">Edit Personal Information</h4>
                    
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile" type="button" role="tab" aria-controls="profile" aria-selected="true">Profile Details</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="password-tab" data-bs-toggle="tab" data-bs-target="#password" type="button" role="tab" aria-controls="password" aria-selected="false">Change Password</button>
                        </li>
                    </ul>
                    
                    <div class="tab-content" id="myTabContent">
                        <!-- Profile Tab -->
                        <div class="tab-pane fade show active" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                            <div class="row">
                                <div class="col-md-8">



                                    <form id="profileForm" onsubmit="return validateProfileForm()">
                                        <div class="mb-3">
                                            <label class="form-label fw-bold">Full Name:</label>
                                            <input type="text" class="form-control bg-light" id="name" value="<%= user.name %>">
                                            <small id="nameError" class="text-danger"></small>
                                        </div>
                                    
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="mb-3">
                                                    <label class="form-label fw-bold">Phone Number:</label>
                                                    <input type="tel" class="form-control bg-light" id="phone" value="<%= user.phone %>">
                                                    <small id="phoneError" class="text-danger"></small>
                                                </div>
                                            </div>
                                        </div>
                                    
                                        <div class="d-flex">
                                            <button id="updateProfileBtn" type="submit" class="btn btn-primary me-3">Save Changes</button>
                                            <button type="button" class="btn btn-outline-primary">Cancel</button>
                                        </div>
                                        
                                    </form>
                                   





                                </div>
                                
                                <div class="col-md-4">
                                    
                                </div>
                            </div>
                        </div>
                        
                        <!-- Password Tab -->
                        <div class="tab-pane fade" id="password" role="tabpanel" aria-labelledby="password-tab">
                            <div class="row">
                                <div class="col-md-8">
                                   
                                   
                                    
<form id="passwordForm" onsubmit="return validatePasswordForm()">
    <div class="mb-3 password-field">
        <label for="currentPassword" class="form-label">Current Password</label>
        <input type="password" class="form-control" id="currentPassword">
        <span class="password-toggle" onclick="togglePassword('currentPassword')">
            <i class="far fa-eye"></i>
        </span>
        <small id="currentPasswordError" class="text-danger"></small>
    </div>

    <div class="mb-3 password-field">
        <label for="newPassword" class="form-label">New Password</label>
        <input type="password" class="form-control" id="newPassword">
        <span class="password-toggle" onclick="togglePassword('newPassword')">
            <i class="far fa-eye"></i>
        </span>
        <small id="newPasswordError" class="text-danger"></small>
    </div>

    <div class="mb-4 password-field">
        <label for="confirmPassword" class="form-label">Confirm New Password</label>
        <input type="password" class="form-control" id="confirmPassword">
        <span class="password-toggle" onclick="togglePassword('confirmPassword')">
            <i class="far fa-eye"></i>
        </span>
        <small id="confirmPasswordError" class="text-danger"></small>
    </div>

    <div class="mb-4">
        <h6 class="fw-bold mb-2">Password Requirements:</h6>
        <ul class="ps-3 mb-0">
            <li>Minimum 8 characters long</li>
            <li>Include at least one uppercase letter</li>
            <li>Include at least one lowercase letter</li>
            <li>Include at least one number</li>
            <li>Include at least one special character</li>
        </ul>
    </div>

    <div class="d-flex">
        <button type="submit" class="btn btn-primary me-3">Update Password</button>
        <button type="button" class="btn btn-outline-primary">Cancel</button>
    </div>
</form>

                                </div>
                                
                                <div class="col-md-4">
                                    <div class="card p-3 mb-4">
                                        <h6 class="fw-bold mb-3">Security Tips</h6>
                                        <p class="small text-muted mb-2">For a stronger password:</p>
                                        <ul class="small text-muted ps-3 mb-0">
                                            <li>Use a unique password for each account</li>
                                            <li>Consider using a password manager</li>
                                            <li>Change your password every 3-6 months</li>
                                            <li>Don't share your password with others</li>
                                        </ul>
                                    </div>
                                    
                                   
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        
        <div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
            <div class="modal-dialog">
              <div class="modal-content">
                <div class="modal-header">
                  <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                  <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                  <p><strong>Order ID:</strong> <span id="modalOrderId"></span></p>
                  <p><strong>Order Date:</strong> <span id="modalOrderDate"></span></p>
                  <p><strong>Total Amount:</strong> <span id="modalTotalAmount"></span></p>
                  <p><strong>Products:</strong></p>
                  <ul id="modalProducts" class="list-group"></ul>
                  <p><strong>Shipping Address:</strong> <span id="modalShipping"></span></p>
                  <p><strong>Status:</strong> <span id="modalOrderStatus"></span></p>
                </div>
              </div>
            </div>
          </div>




    </div>
    <%- include('../partials/userFooter') %>

    
    
    
    <!-- <script src="/js/profile.js"></script> -->

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>



<!-- 
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            console.log("✅ JS Loaded Successfully!");
        
            // Ensure elements exist before attaching event listener
            const updateProfileBtn = document.getElementById("updateProfileBtn");
        
            if (!updateProfileBtn) {
                console.error("❌ ERROR: 'updateProfileBtn' button NOT FOUND in the document!");
                return;
            }
        
            updateProfileBtn.addEventListener("click", function (event) {
                event.preventDefault();
                console.log("🔄 Updating Profile...");
        
                const nameInput = document.getElementById("name");
                const phoneInput = document.getElementById("phone");
        
                if (!nameInput || !phoneInput) {
                    console.error("❌ ERROR: One or more input fields (name, phone) are missing!");
                    return;
                }
        
                const name = nameInput.value.trim();
                const phone = phoneInput.value.trim();
        
                if (name === "" || phone === "") {
                    Swal.fire({
                        icon: "warning",
                        title: "⚠️ Missing Fields",
                        text: "Please fill in all fields before submitting!",
                        confirmButtonColor: "#3085d6"
                    });
                    return;
                }
        
                // Show loading Swal
                Swal.fire({
                    title: "Updating...",
                    text: "Please wait while we update your profile.",
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                    }
                });
        
                fetch("/user/update-profile", {
                    method: "PUT",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ name, phone })
                })
                .then(response => response.json())
                .then(result => {
                    console.log("✅ Server Response:", result);
                    if (result.success) {
                        Swal.fire({
                            icon: "success",
                            title: "✅ Profile Updated",
                            text: "Your profile has been updated successfully!",
                            confirmButtonColor: "#28a745"
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            title: "❌ Update Failed",
                            text: result.message,
                            confirmButtonColor: "#d33"
                        });
                    }
                })
                .catch(error => {
                    console.error("❌ Fetch Error:", error);
                    Swal.fire({
                        icon: "error",
                        title: "❌ Server Error",
                        text: "Something went wrong. Please try again later!",
                        confirmButtonColor: "#d33"
                    });
                });
            });
        
            console.log("✅ Event Listeners Attached Successfully!");
        });
        </script>
         -->




         <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>






         <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
         <script>
             // Toggle password visibility
             function togglePassword(fieldId) {
                 const field = document.getElementById(fieldId);
                 const icon = field.nextElementSibling.querySelector("i");
                 if (field.type === "password") {
                     field.type = "text";
                     icon.classList.remove("fa-eye");
                     icon.classList.add("fa-eye-slash");
                 } else {
                     field.type = "password";
                     icon.classList.remove("fa-eye-slash");
                     icon.classList.add("fa-eye");
                 }
             }
         
             // Profile form validation
             function validateProfileForm() {
                 let isValid = true;
         
                 // Name validation
                 const name = document.getElementById("name").value.trim();
                 const nameError = document.getElementById("nameError");
                 if (!name || name.length < 2) {
                     nameError.textContent = "Name must be at least 2 characters long";
                     isValid = false;
                 } else {
                     nameError.textContent = "";
                 }
         
                 // Phone validation (10 digits)
                 const phone = document.getElementById("phone").value.trim();
                 const phoneError = document.getElementById("phoneError");
                 const phoneRegex = /^\d{10}$/;
                 if (!phoneRegex.test(phone)) {
                     phoneError.textContent = "Phone number must be exactly 10 digits";
                     isValid = false;
                 } else {
                     phoneError.textContent = "";
                 }
         
                 // If valid, submit via AJAX
                 if (isValid) {
                     submitProfileForm();
                 }
         
                 return false; // Prevent default form submission
             }
         
             // Submit profile form via AJAX
             async function submitProfileForm() {
                 const name = document.getElementById("name").value.trim();
                 const phone = document.getElementById("phone").value.trim();
         
                 try {
                     const response = await fetch("/user/profile/update", {
                         method: "POST",
                         headers: { "Content-Type": "application/json" },
                         body: JSON.stringify({ name, phone })
                     });
                     const result = await response.json();
         
                     if (result.success) {
                         Swal.fire({
                             icon: "success",
                             title: "Profile Updated!",
                             text: result.message || "Your profile has been updated.",
                             toast: true,
                             position: "top-end",
                             showConfirmButton: false,
                             timer: 1000,
                             customClass: {
                                 popup: 'swal-custom',
                                 title: 'swal-title-custom',
                                 content: 'swal-text-custom'
                             },
                             background: '#F4F7F7',
                             timerProgressBar: true
                         });
                     } else {
                         Swal.fire({
                             icon: "error",
                             title: "Update Failed",
                             text: result.message || "Failed to update profile",
                             toast: true,
                             position: "top-end",
                             showConfirmButton: false,
                             timer: 1500,
                             background: '#F4F7F7'
                         });
                     }
                 } catch (error) {
                     Swal.fire({
                         icon: "error",
                         title: "Error",
                         text: "An error occurred while updating your profile",
                         toast: true,
                         position: "top-end",
                         showConfirmButton: false,
                         timer: 1500,
                         background: '#F4F7F7'
                     });
                 }
             }
         
             // Password form validation
             function validatePasswordForm() {
                 let isValid = true;
         
                 // Current password
                 const currentPassword = document.getElementById("currentPassword").value;
                 const currentPasswordError = document.getElementById("currentPasswordError");
                 if (!currentPassword) {
                     currentPasswordError.textContent = "Current password is required";
                     isValid = false;
                 } else {
                     currentPasswordError.textContent = "";
                 }
         
                 // New password
                 const newPassword = document.getElementById("newPassword").value;
                 const newPasswordError = document.getElementById("newPasswordError");
                 const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*])[A-Za-z\d!@#$%^&*]{8,}$/;
                 if (!passwordRegex.test(newPassword)) {
                     newPasswordError.textContent = "Password must be 8+ characters with uppercase, lowercase, number, and special character";
                     isValid = false;
                 } else {
                     newPasswordError.textContent = "";
                 }
         
                 // Confirm password
                 const confirmPassword = document.getElementById("confirmPassword").value;
                 const confirmPasswordError = document.getElementById("confirmPasswordError");
                 if (newPassword !== confirmPassword) {
                     confirmPasswordError.textContent = "Passwords do not match";
                     isValid = false;
                 } else {
                     confirmPasswordError.textContent = "";
                 }
         
                 // If valid, submit via AJAX
                 if (isValid) {
                     submitPasswordForm();
                 }
         
                 return false; // Prevent default form submission
             }
         
             // Submit password form via AJAX
             async function submitPasswordForm() {
                 const currentPassword = document.getElementById("currentPassword").value;
                 const newPassword = document.getElementById("newPassword").value;
         
                 try {
                     const response = await fetch("/user/password/update", {
                         method: "POST",
                         headers: { "Content-Type": "application/json" },
                         body: JSON.stringify({ currentPassword, newPassword })
                     });
                     const result = await response.json();
         
                     if (result.success) {
                         Swal.fire({
                             icon: "success",
                             title: "Password Updated!",
                             text: result.message || "Your password has been updated.",
                             toast: true,
                             position: "top-end",
                             showConfirmButton: false,
                             timer: 1000,
                             customClass: {
                                 popup: 'swal-custom',
                                 title: 'swal-title-custom',
                                 content: 'swal-text-custom'
                             },
                             background: '#F4F7F7',
                             timerProgressBar: true
                         });
                         document.getElementById("passwordForm").reset(); // Clear form
                     } else {
                         Swal.fire({
                             icon: "error",
                             title: "Update Failed",
                             text: result.message || "Failed to update password",
                             toast: true,
                             position: "top-end",
                             showConfirmButton: false,
                             timer: 1500,
                             background: '#F4F7F7'
                         });
                     }
                 } catch (error) {
                     Swal.fire({
                         icon: "error",
                         title: "Error",
                         text: "An error occurred while updating your password",
                         toast: true,
                         position: "top-end",
                         showConfirmButton: false,
                         timer: 1500,
                         background: '#F4F7F7'
                     });
                 }
             }
         
             // Cancel button handler (optional)
             document.querySelectorAll(".btn-outline-primary").forEach(btn => {
                 btn.addEventListener("click", () => {
                     window.location.href = "/user/dashboard"; // Adjust path as needed
                 });
             });
             
         </script>







</body>
</html>