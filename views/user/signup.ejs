<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Supreme - Create Account</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --primary-color: #2c3e50;
      --accent-color: #e67e22;
      --light-color: #f8f9fa;
      --dark-color: #343a40;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background-color: #f9f9f9;
      overflow-x: hidden;
    }

    .signup-container {
      min-height: 100vh;
      box-shadow: 0 0 25px rgba(0, 0, 0, 0.1);
      background-color: white;
    }

    .form-side {
      padding: 2rem;
    }

    .slider-side {
      padding: 0;
      position: relative;
      overflow: hidden;
      background-color: var(--dark-color);
    }

    .slider-side::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.6));
      z-index: 1;
    }

    .carousel-inner {
      height: 100%;
    }

    .carousel-item {
      height: 100%;
    }

    .carousel-item img {
      height: 100%;
      object-fit: cover;
      object-position: center;
    }

    .brand-overlay {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 2;
      text-align: center;
      width: 80%;
    }

    .brand-overlay h1 {
      color: white;
      font-weight: 700;
      margin-bottom: 1rem;
      font-size: 2.5rem;
    }

    .brand-overlay p {
      color: rgba(255, 255, 255, 0.9);
      font-size: 1.1rem;
    }

    .form-title {
      margin-bottom: 2rem;
    }

    .form-title h2 {
      font-weight: 600;
      color: var(--primary-color);
    }

    .form-title p {
      color: #777;
      font-size: 0.9rem;
    }

    .form-control {
      padding: 0.8rem 1rem;
      border-radius: 8px;
      margin-bottom: 1.2rem;
      border: 1px solid #ddd;
      transition: all 0.3s ease;
    }

    .form-control:focus {
      border-color: var(--accent-color);
      box-shadow: 0 0 0 0.2rem rgba(230, 126, 34, 0.25);
    }

    .password-container {
      position: relative;
    }

    .toggle-password {
      position: absolute;
      right: 15px;
      top: 12px;
      cursor: pointer;
      color: #6c757d;
    }

    .btn-create {
      padding: 0.8rem;
      border-radius: 8px;
      background-color: var(--accent-color);
      border: none;
      color: white;
      font-weight: 600;
      transition: all 0.3s ease;
      width: 100%;
      margin-top: 1rem;
    }

    .btn-create:hover,
    .btn-create:focus {
      background-color: #d35400;
      transform: translateY(-2px);
    }

    .social-login {
      margin-top: 1.5rem;
      text-align: center;
    }

    .divider {
      display: flex;
      align-items: center;
      margin: 1.5rem 0;
    }

    .divider::before,
    .divider::after {
      content: "";
      flex: 1;
      height: 1px;
      background-color: #ddd;
    }

    .divider span {
      padding: 0 1rem;
      color: #777;
      font-size: 0.9rem;
    }

    .btn-google {
      width: 100%;
      background-color: white;
      border: 1px solid #ddd;
      padding: 0.8rem;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
      transition: all 0.3s ease;
    }

    .btn-google:hover {
      background-color: #f8f9fa;
    }

    .login-link {
      margin-top: 1.5rem;
      text-align: center;
      font-size: 0.9rem;
    }

    .login-link a {
      color: var(--accent-color);
      text-decoration: none;
      font-weight: 600;
    }

    .login-link a:hover {
      text-decoration: underline;
    }

    /* Modal styling */
    .modal {
      background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
      border-radius: 10px;
      border: none;
    }

    .modal-header {
      border-bottom: none;
      padding-bottom: 0;
    }

    .modal-body {
      padding: 1.5rem;
    }

    .modal-footer {
      border-top: none;
      padding-top: 0;
    }

    #otpInput {
      letter-spacing: 0.5rem;
      font-size: 1.2rem;
      text-align: center;
    }

    .btn-verify {
      background-color: var(--accent-color);
      color: white;
      border: none;
      padding: 0.8rem 1.5rem;
      border-radius: 8px;
      font-weight: 600;
    }

    .btn-verify:hover {
      background-color: #d35400;
    }

    .btn-resend {
      background-color: transparent;
      color: var(--accent-color);
      border: 1px solid var(--accent-color);
      padding: 0.8rem 1.5rem;
      border-radius: 8px;
      font-weight: 600;
    }

    .btn-resend:hover {
      background-color: rgba(230, 126, 34, 0.1);
    }

    /* Responsive adjustments */
    @media (max-width: 991px) {
      .slider-side {
        display: none;
      }

      .form-side {
        max-width: 100%;
        flex: 0 0 100%;
      }
    }

    @media (max-width: 576px) {
      .form-side {
        padding: 1.5rem;
      }

      .form-title h2 {
        font-size: 1.5rem;
      }
    }
  </style>
</head>

<body>
  <div class="container-fluid p-0">
    <div class="row g-0 signup-container">
      <!-- Slider Side -->
      <div class="col-lg-6 slider-side d-none d-lg-block">
        <div id="furnitureCarousel" class="carousel slide carousel-fade" data-bs-ride="carousel"
          data-bs-interval="4000">
          <div class="carousel-inner">
            <div class="carousel-item active">
              <img src="/images/a4.jpg" alt="Luxury Living Room" class="w-100">
            </div>
            <div class="carousel-item">
              <img src="/images/a5.jpg" alt="Modern Kitchen" class="w-100">
            </div>
            <div class="carousel-item">
              <img src="/images/a6.jpg" alt="Cozy Bedroom" class="w-100">
            </div>
          </div>
        </div>
        <div class="brand-overlay">
          <h1>Supreme</h1>
          <p>Transform your space with our premium furniture collection. Elegance meets comfort in every piece.</p>
        </div>
      </div>

      <!-- Form Side -->
      <div class="col-lg-6 form-side d-flex align-items-center">
        <div class="w-100 px-md-5">
          <div class="form-title">
            <h2>Create an account</h2>
            <p>"Where Style Meets Comfort â€“ Sign Up & Start Shopping!"</p>
          </div>

          <form id="createAccountForm" action="/user/signup" method="POST">
            <div class="mb-3">
              <input type="text" class="form-control" id="name" name="name" placeholder="Full Name">
            </div>

            <div class="mb-3">
              <input type="email" class="form-control" id="email" name="email" placeholder="Email Address">
            </div>

            <div class="mb-3 password-container">
              <input type="password" class="form-control" id="password" name="password" placeholder="Password">
              <span class="toggle-password" data-target="password">
                <i class="fa fa-eye-slash"></i>
              </span>
            </div>

            <div class="mb-3 password-container">
              <input type="password" class="form-control" id="confirmPassword" name="confirmPassword"
                placeholder="Confirm Password">
              <span class="toggle-password" data-target="confirmPassword">
                <i class="fa fa-eye-slash"></i>
              </span>
            </div>

            <div class="mb-3">
              <input type="text" class="form-control" id="phone" name="phone" placeholder="Phone Number">
            </div>

            <div class="mb-3">
              <input type="text" class="form-control" id="referral" name="referral"
                placeholder="Referral Code (Optional)">
            </div>

            <button type="submit" class="btn-create" id="createAccount">Create Account</button>
          </form>

          <div class="divider">
            <span>OR</span>
          </div>

          <button type="button" id="googleLogin" class="btn-google">
            <img src="https://cdn-icons-png.flaticon.com/128/300/300221.png" alt="Google" width="18">
            <span>Sign up with Google</span>
          </button>

          <div class="login-link">
            <span>Already have an account?</span> <a href="/user/login" id="login">Log in</a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- OTP Modal -->
  <div class="modal fade" id="otpModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Verify Your Email</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body text-center">
          <p class="mb-4">We've sent a verification code to your email address.</p>
          <div class="mb-4">
            <input type="text" class="form-control" id="otpInput" placeholder="Enter OTP" maxlength="6" required>
          </div>
          <div class="d-grid gap-2">
            <button type="button" id="verifyOtp" class="btn-verify">Verify OTP</button>
            <button type="button" id="resendOtp" class="btn-resend">Resend OTP</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      console.log("DOM fully loaded!");

      // Password toggle functionality
      document.querySelectorAll('.toggle-password').forEach(function (toggle) {
        toggle.addEventListener('click', function () {
          const targetId = this.getAttribute('data-target');
          const passwordInput = document.getElementById(targetId);
          const icon = this.querySelector('i');

          if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
          } else {
            passwordInput.type = 'password';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
          }
        });
      });

      // Initialize carousel
      const carousel = new bootstrap.Carousel(document.getElementById('furnitureCarousel'));

      // Google Login Button
      const googleLoginButton = document.getElementById("googleLogin");
      if (googleLoginButton) {
        googleLoginButton.addEventListener("click", function (event) {
          event.preventDefault();
          console.log("Google button clicked! Redirecting to /user/auth/google...");
          window.location.href = "/user/auth/google";
        });
      } else {
        console.error("Google login button not found in DOM!");
      }

      // Form submission
      const createAccountForm = document.getElementById("createAccountForm");
      if (createAccountForm) {
        createAccountForm.addEventListener("submit", async function (event) {
          event.preventDefault();

          let isValid = true;

          // Get form values
          const name = document.getElementById("name").value.trim();
          const email = document.getElementById("email").value.trim();
          const password = document.getElementById("password").value.trim();
          const confirmPassword = document.getElementById("confirmPassword").value.trim();
          const phone = document.getElementById("phone").value.trim();
          const referral = document.getElementById("referral").value.trim();

          // Store form data
          window.formData = { name, email, password, phone, referral };

          // Validation patterns
          const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          const passwordPattern = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/;
          const phonePattern = /^[789][0-9]{9}$/;
          const namePattern = /^(?=[A-Za-z]{5}[A-Za-z0-9]*$)[A-Za-z0-9]{5,12}$/;


          // Clear previous errors
          document.querySelectorAll(".error").forEach((el) => el.remove());

          function showError(input, message) {
            const error = document.createElement("small");
            error.classList.add("error", "text-danger", "d-block", "mb-2");
            error.innerText = message;
            input.parentNode.insertBefore(error, input.nextSibling);
            input.classList.add("is-invalid");
          }

          // Validate inputs


          if (!name) {
            showError(document.getElementById("name"), "Name cannot be empty.");
            isValid = false;
          } else if (!namePattern.test(name)) {
            showError(
              document.getElementById("name"),
              "Name must have exactly 5 letters, optional numbers, up to 12 characters total, no spaces or special characters."
            );
            isValid = false;
          }

          if (!emailPattern.test(email)) {
            showError(document.getElementById("email"), "Enter a valid email address.");
            isValid = false;
          }

          if (!passwordPattern.test(password)) {
            showError(
              document.getElementById("password"),
              "Password must be at least 8 characters, include a letter and a number."
            );
            isValid = false;
          }

          if (password !== confirmPassword) {
            showError(document.getElementById("confirmPassword"), "Passwords do not match.");
            isValid = false;
          }

          if (!phonePattern.test(phone)) {
            showError(
              document.getElementById("phone"),
              "Phone number must be 10 digits starting with 7, 8, or 9."
            );
            isValid = false;
          }

          if (!isValid) return;

          const submitButton = document.getElementById("createAccount");
          submitButton.disabled = true;
          submitButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Sending OTP...';

          try {
            const response = await fetch("/user/send-signup-otp", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ email }),
            });

            const data = await response.json();
            if (response.ok) {
              const otpModal = new bootstrap.Modal(document.getElementById('otpModal'));
              otpModal.show();
              document.getElementById("otpInput").focus();
            } else {
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: data.error || "Failed to send OTP",
              });
            }
          } catch (error) {
            console.error("Error sending OTP:", error);
            Swal.fire({
              icon: "error",
              title: "Error",
              text: "Error sending OTP",
            });
          }

          submitButton.disabled = false;
          submitButton.innerHTML = 'Create Account';
        });
      } else {
        console.error("Create account form not found in DOM!");
      }

      // OTP Verification
      const verifyOtpButton = document.getElementById("verifyOtp");
      if (verifyOtpButton) {
        verifyOtpButton.addEventListener("click", async function () {
          const otp = document.getElementById("otpInput").value.trim();
          const { email, name, password, phone, referral } = window.formData;

          if (!otp) {
            Swal.fire({
              icon: "warning",
              title: "Missing OTP",
              text: "Please enter the OTP.",
            });
            return;
          }

          const verifyButton = document.getElementById("verifyOtp");
          verifyButton.disabled = true;
          verifyButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Verifying...';

          try {
            const otpResponse = await fetch("/user/verify-signup-otp", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ email, name, password, phone, otp, referral }),
            });

            const otpData = await otpResponse.json();
            if (otpResponse.ok) {
              Swal.fire({
                icon: "success",
                title: "Success",
                text: otpData.message,
                confirmButtonText: "OK",
              }).then((result) => {
                if (result.isConfirmed) {
                  window.location.href = otpData.redirect;
                }
              });
            } else {
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: otpData.error || "Invalid OTP",
              });
            }
          } catch (error) {
            console.error("Error during verification:", error);
            Swal.fire({
              icon: "error",
              title: "Error",
              text: "Error during verification process",
            });
          }

          verifyButton.disabled = false;
          verifyButton.innerHTML = 'Verify OTP';
        });
      } else {
        console.error("Verify OTP button not found in DOM!");
      }

      // Resend OTP Function
      const resendOtpButton = document.getElementById("resendOtp");
      if (resendOtpButton) {
        resendOtpButton.addEventListener("click", async function () {
          const { email } = window.formData;

          if (!email) {
            Swal.fire({
              icon: "warning",
              title: "Missing Email",
              text: "No email available to resend OTP.",
            });
            return;
          }

          const resendButton = document.getElementById("resendOtp");
          resendButton.disabled = true;
          resendButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Resending...';

          try {
            const response = await fetch("/user/send-signup-otp", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ email }),
            });

            const data = await response.json();
            if (response.ok) {
              Swal.fire({
                icon: "success",
                title: "Success",
                text: "OTP resent successfully!",
              });
            } else {
              Swal.fire({
                icon: "error",
                title: "Oops...",
                text: data.error || "Failed to resend OTP",
              });
            }
          } catch (error) {
            console.error("Error resending OTP:", error);
            Swal.fire({
              icon: "error",
              title: "Error",
              text: "Error resending OTP",
            });
          }

          resendButton.disabled = false;
          resendButton.innerHTML = 'Resend OTP';
        });
      } else {
        console.error("Resend OTP button not found in DOM!");
      }
    });
  </script>
</body>

</html>