<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Supreme - Login</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    :root {
      --primary-color: #2c3e50;
      --accent-color: #e67e22;
      --light-color: #f8f9fa;
      --dark-color: #343a40;
    }
    
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #f9f9f9;
      overflow-x: hidden;
    }
    
    .login-container {
      min-height: 100vh;
      box-shadow: 0 0 25px rgba(0,0,0,0.1);
      background-color: white;
    }
    
    .form-side {
      padding: 2rem;
    }
    
    .slider-side {
      padding: 0;
      position: relative;
      overflow: hidden;
      background-color: var(--dark-color);
    }
    
    .slider-side::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.6));
      z-index: 1;
    }
    
    .carousel-inner {
      height: 100%;
    }
    
    .carousel-item {
      height: 100%;
    }
    
    .carousel-item img {
      height: 100%;
      object-fit: cover;
      object-position: center;
    }
    
    .brand-overlay {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 2;
      text-align: center;
      width: 80%;
    }
    
    .brand-overlay h1 {
      color: white;
      font-weight: 700;
      margin-bottom: 1rem;
      font-size: 2.5rem;
    }
    
    .brand-overlay p {
      color: rgba(255,255,255,0.9);
      font-size: 1.1rem;
    }
    
    .form-title {
      margin-bottom: 2rem;
    }
    
    .form-title h2 {
      font-weight: 600;
      color: var(--primary-color);
    }
    
    .form-title p {
      color: #777;
      font-size: 0.9rem;
    }
    
    .form-control {
      padding: 0.8rem 1rem;
      border-radius: 8px;
      margin-bottom: 1.2rem;
      border: 1px solid #ddd;
      transition: all 0.3s ease;
    }
    
    .form-control:focus {
      border-color: var(--accent-color);
      box-shadow: 0 0 0 0.2rem rgba(230, 126, 34, 0.25);
    }
    
    .password-container {
      position: relative;
    }
    
    .toggle-password {
      position: absolute;
      right: 15px;
      top: 12px;
      cursor: pointer;
      color: #6c757d;
    }
    
    .btn-login {
      padding: 0.8rem;
      border-radius: 8px;
      background-color: var(--accent-color);
      border: none;
      color: white;
      font-weight: 600;
      transition: all 0.3s ease;
      width: 100%;
      margin-top: 1rem;
    }
    
    .btn-login:hover, .btn-login:focus {
      background-color: #d35400;
      transform: translateY(-2px);
    }
    
    .social-login {
      margin-top: 1.5rem;
      text-align: center;
    }
    
    .divider {
      display: flex;
      align-items: center;
      margin: 1.5rem 0;
    }
    
    .divider::before, .divider::after {
      content: "";
      flex: 1;
      height: 1px;
      background-color: #ddd;
    }
    
    .divider span {
      padding: 0 1rem;
      color: #777;
      font-size: 0.9rem;
    }
    
    .btn-google {
      width: 100%;
      background-color: white;
      border: 1px solid #ddd;
      padding: 0.8rem;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 10px;
      transition: all 0.3s ease;
    }
    
    .btn-google:hover {
      background-color: #f8f9fa;
    }
    
    .signup-link {
      margin-top: 1.5rem;
      text-align: center;
      font-size: 0.9rem;
    }
    
    .signup-link a {
      color: var(--accent-color);
      text-decoration: none;
      font-weight: 600;
    }
    
    .signup-link a:hover {
      text-decoration: underline;
    }
    
    .forgot-password {
      text-align: right;
      display: block;
      margin-top: 0.5rem;
      color: var(--accent-color);
      font-size: 0.9rem;
      text-decoration: none;
    }
    
    .forgot-password:hover {
      text-decoration: underline;
    }
    
    /* Reset Password Modal */
    .modal {
      background-color: rgba(0,0,0,0.5);
    }
    
    .modal-content {
      border-radius: 10px;
      border: none;
    }
    
    .modal-header {
      border-bottom: none;
      padding-bottom: 0;
    }
    
    .modal-body {
      padding: 1.5rem;
    }
    
    .modal-footer {
      border-top: none;
      padding-top: 0;
    }
    
    /* Testimonial slider indicators */
    .testimonial-indicators {
      position: absolute;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      z-index: 10;
      display: flex;
      gap: 8px;
    }
    
    .testimonial-indicators .indicator {
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background-color: rgba(255,255,255,0.4);
      cursor: pointer;
      transition: all 0.3s ease;
    }
    
    .testimonial-indicators .indicator.active {
      background-color: white;
      transform: scale(1.2);
    }
    
    /* Customer quotes */
    .customer-quote {
      position: absolute;
      bottom: 70px;
      left: 50%;
      transform: translateX(-50%);
      width: 80%;
      color: white;
      text-align: center;
      z-index: 5;
    }
    
    .customer-quote p {
      font-style: italic;
      font-size: 1.1rem;
      line-height: 1.6;
      margin-bottom: 15px;
    }
    
    .customer-quote .author {
      font-weight: 600;
      font-size: 0.9rem;
    }
    
    /* Responsive adjustments */
    @media (max-width: 991px) {
      .slider-side {
        display: none;
      }
      
      .form-side {
        max-width: 100%;
        flex: 0 0 100%;
      }
    }
    
    @media (max-width: 576px) {
      .form-side {
        padding: 1.5rem;
      }
      
      .form-title h2 {
        font-size: 1.5rem;
      }
    }
  </style>
</head>
<body>
  <div class="container-fluid p-0">
    <div class="row g-0 login-container">
      <!-- Slider Side -->
      <div class="col-lg-6 slider-side d-none d-lg-block">
        <div id="furnitureCarousel" class="carousel slide carousel-fade" data-bs-ride="carousel" data-bs-interval="4000">
          <div class="carousel-inner">
            <div class="carousel-item active">
              <img src="/images/a1.jpg" alt="Elegant Dining Room" class="w-100">
              <div class="customer-quote">
                <p>"Supreme transformed our living space with their exquisite furniture. Every piece tells a story and adds character to our home."</p>
                <div class="author">- Emma Johnson</div>
              </div>
            </div>
            <div class="carousel-item">
              <img src="/images/a2.jpg" alt="Modern Office" class="w-100">
              <div class="customer-quote">
                <p>"The quality and craftsmanship of Supreme furniture is unmatched. Our office redesign has never looked better."</p>
                <div class="author">- Michael Chen</div>
              </div>
            </div>
            <div class="carousel-item">
              <img src="/images/a3.jpg" alt="Stylish Bedroom" class="w-100">
              <div class="customer-quote">
                <p>"From browsing to delivery, Supreme made furnishing our new home a delightful experience. We couldn't be happier!"</p>
                <div class="author">- Sarah Williams</div>
              </div>
            </div>
          </div>
          
          <div class="testimonial-indicators">
            <div class="indicator active" data-bs-target="#furnitureCarousel" data-bs-slide-to="0"></div>
            <div class="indicator" data-bs-target="#furnitureCarousel" data-bs-slide-to="1"></div>
            <div class="indicator" data-bs-target="#furnitureCarousel" data-bs-slide-to="2"></div>
          </div>
        </div>
        <div class="brand-overlay">
          <h1>Supreme</h1>
          <p>Transform your space with our premium furniture collection. Elegance meets comfort in every piece.</p>
        </div>
      </div>
      
      <!-- Form Side -->
      <div class="col-lg-6 form-side d-flex align-items-center">
        <div class="w-100 px-md-5">
          <div class="form-title">
            <h2>Login to your account</h2>
            <p>Let's continue your journey with Supreme</p>
          </div>
          
          <form id="loginForm" action="/user/login" method="POST">
            <div class="mb-3">
              <input type="email" class="form-control" id="email" name="email" placeholder="Email Address" required>
            </div>
            
            <div class="mb-3 password-container">
              <input type="password" class="form-control" id="password" name="password" placeholder="Password" required>
              <span class="toggle-password" data-target="password">
                <i class="fa fa-eye-slash"></i>
              </span>
            </div>
            
            <a href="#" class="forgot-password" id="forgotPassword">Forgot Password?</a>
            
            <button type="submit" class="btn-login" id="loginButton">Login</button>
          </form>
          
          <div class="divider">
            <span>OR</span>
          </div>
          
          <button type="button" id="googleLogin" class="btn-google">
            <img src="https://cdn-icons-png.flaticon.com/128/300/300221.png" alt="Google" width="18">
            <span>Continue with Google</span>
          </button>
          
          <div class="signup-link">
            <span>Don't have an account?</span> <a href="/user/signup" id="signup">Sign up</a>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Reset Password Modal -->
  <div class="modal fade" id="resetPasswordModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Reset Password</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <p class="mb-3">Enter your registered email to receive a password reset OTP</p>
          <div class="mb-3">
            <input type="email" class="form-control" id="resetEmail" placeholder="Enter your email" required>
          </div>
          <div id="resetMessage" class="text-center mb-3"></div>
          <div class="d-grid">
            <button type="button" id="sendResetOtp" class="btn btn-primary">Send OTP</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      console.log("DOM fully loaded!");
      
      // Update carousel indicators
      const indicators = document.querySelectorAll('.testimonial-indicators .indicator');
      indicators.forEach((indicator, index) => {
        indicator.addEventListener('click', () => {
          // Remove active class from all indicators
          indicators.forEach(ind => ind.classList.remove('active'));
          // Add active class to clicked indicator
          indicator.classList.add('active');
        });
      });
      
      // Listen for carousel slide event to update indicators
      const carousel = document.getElementById('furnitureCarousel');
      if (carousel) {
        carousel.addEventListener('slide.bs.carousel', function (event) {
          // Remove active class from all indicators
          indicators.forEach(ind => ind.classList.remove('active'));
          // Add active class to current indicator
          indicators[event.to].classList.add('active');
        });
      }
      
      // Password toggle functionality
      document.querySelectorAll('.toggle-password').forEach(function(toggle) {
        toggle.addEventListener('click', function() {
          const targetId = this.getAttribute('data-target');
          const passwordInput = document.getElementById(targetId);
          const icon = this.querySelector('i');
          
          if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
          } else {
            passwordInput.type = 'password';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
          }
        });
      });
      
      // Forgot Password
      const forgotPasswordLink = document.getElementById("forgotPassword");
      const resetModal = new bootstrap.Modal(document.getElementById('resetPasswordModal'));
      
      forgotPasswordLink.addEventListener('click', function(e) {
        e.preventDefault();
        resetModal.show();
      });
      
      // Send Reset OTP
      const sendResetOtpBtn = document.getElementById('sendResetOtp');
      const resetEmailInput = document.getElementById('resetEmail');
      const resetMessage = document.getElementById('resetMessage');
      
      sendResetOtpBtn.addEventListener('click', async function() {
        const email = resetEmailInput.value.trim();
        
        if (!email) {
          resetMessage.innerHTML = '<div class="alert alert-warning">Please enter your email!</div>';
          return;
        }
        
        // Show loading state
        sendResetOtpBtn.disabled = true;
        sendResetOtpBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Sending...';
        
        try {
          const response = await fetch("/user/forgot-password", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email }),
          });
          
          const result = await response.json();
          
          if (result.success) {
            resetMessage.innerHTML = '<div class="alert alert-success">OTP sent to your email!</div>';
            setTimeout(() => {
              resetModal.hide();
              window.location.href = "/user/verifyOtp";
            }, 1500);
          } else {
            resetMessage.innerHTML = `<div class="alert alert-danger">Error: ${result.message}</div>`;
          }
        } catch (error) {
          console.error("Error:", error);
          resetMessage.innerHTML = '<div class="alert alert-danger">Something went wrong. Please try again.</div>';
        } finally {
          // Reset button state
          sendResetOtpBtn.disabled = false;
          sendResetOtpBtn.innerHTML = 'Send OTP';
        }
      });
      
      // Google Login Button
      const googleLoginButton = document.getElementById("googleLogin");
      if (googleLoginButton) {
        googleLoginButton.addEventListener("click", function(event) {
          event.preventDefault();
          console.log("Google button clicked! Redirecting to /user/auth/google...");
          window.location.href = "/user/auth/google";
        });
      } else {
        console.error("Google login button not found in DOM!");
      }
      
      // Form submission with validation
      const loginForm = document.getElementById("loginForm");
      if (loginForm) {
        loginForm.addEventListener("submit", async function(event) {
          event.preventDefault();
          
          let isValid = true;
          
          // Get form values
          const email = document.getElementById("email").value.trim();
          const password = document.getElementById("password").value.trim();
          
          // Clear previous errors
          document.querySelectorAll(".error").forEach((el) => el.remove());
          
          function showError(input, message) {
            const error = document.createElement("small");
            error.classList.add("error", "text-danger", "d-block", "mb-2");
            error.innerText = message;
            input.parentNode.insertBefore(error, input.nextSibling);
            input.classList.add("is-invalid");
          }
          
          // Basic validation
          if (!email) {
            showError(document.getElementById("email"), "Email cannot be empty.");
            isValid = false;
          }
          
          if (!password) {
            showError(document.getElementById("password"), "Password cannot be empty.");
            isValid = false;
          }
          
          if (!isValid) return;
          
          const submitButton = document.getElementById("loginButton");
          submitButton.disabled = true;
          submitButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Logging in...';
          
          try {
            // Submit the form
            loginForm.submit();
          } catch (error) {
            console.error("Error during login:", error);
            Swal.fire({
              icon: "error",
              title: "Error",
              text: "Error during login process",
            });
            
            submitButton.disabled = false;
            submitButton.innerHTML = 'Login';
          }
        });
      } else {
        console.error("Login form not found in DOM!");
      }
      
      // Check for error message in URL params
      const urlParams = new URLSearchParams(window.location.search);
      const errorMessage = urlParams.get('error');
      
      if (errorMessage) {
        Swal.fire({
          icon: "error",
          title: "Login Failed",
          text: decodeURIComponent(errorMessage),
        });
      }
    });
  </script>
</body>
</html>