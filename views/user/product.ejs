
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="keywords" content="bootstrap, bootstrap4" />

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

		
		<link href="/css2/product-page.css" rel="stylesheet">
		<title>Product Page </title>



		<style>
			/* Product Color Variants */
            





            .product-colors {
    margin-top: 15px;
}

.section-title {
    font-size: 16px;
    font-weight: bold;
    margin-bottom: 8px;
}

.color-options {
    display: flex;
    align-items: center;
    gap: 10px;
}

.color-option {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    border: 2px solid #ddd;
    cursor: pointer;
    transition: transform 0.3s ease;
}

.color-option:hover {
    transform: scale(1.1);
}

/* Product Stock Selection */
.product-stock {
    margin-top: 15px;
}

.stock-label {
    font-size: 14px;
    font-weight: 600;
    display: block;
    margin-bottom: 5px;
}

.stock-controls {
    display: flex;
    align-items: center;
    gap: 8px;
}

.stock-btn {
    width: 30px;
    height: 30px;
    background-color: #f0f0f0;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 18px;
    cursor: pointer;
    transition: 0.3s;
}

.stock-btn:hover {
    background-color: #ddd;
}

.form-control {
    width: 50px;
    text-align: center;
    font-size: 16px;
    font-weight: bold;
    border: 1px solid #ccc;
    border-radius: 5px;
}

/* Stock Limit Message */
.stock-message {
    font-size: 12px;
    font-weight: 600;
    color: red;
    margin-top: 5px;
}

/* Product Actions */
.product-actions {
    margin-top: 15px;
    display: flex;
    gap: 10px;
}

.product-actions .btn {
    font-size: 14px;
    font-weight: 600;
    padding: 8px 15px;
    border-radius: 5px;
    transition: 0.3s ease-in-out;
}

.btn-primary {
    background-color: #007bff;
    color: white;
    border: none;
}

.btn-primary:hover {
    background-color: #0056b3;
}

.btn-secondary {
    background-color: #6c757d;
    color: white;
    border: none;
}

.btn-secondary:hover {
    background-color: #545b62;
}




/* Styles for the product color section */
.product-colors {
    margin-top: 20px;
    font-family: Arial, sans-serif;
}

/* Section title */
.product-colors .section-title {
    font-size: 18px;
    font-weight: bold;
    margin-bottom: 10px;
}

/* Color options container */
.color-options {
    display: flex;
    align-items: center;
    gap: 10px;
}

/* Color option box */
.color-option {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    border: 2px solid #ddd;
    cursor: pointer;
    transition: transform 0.2s ease-in-out;
}

.color-option:hover {
    transform: scale(1.1);
}

/* Stock display */
.color-options p {
    font-size: 16px;
    font-weight: bold;
    color: #333;
    margin: 0;
}

/* Low stock warning */
.color-options p.low-stock {
    color: #d9534f; /* Red color for low stock */
    font-weight: bold;
}

/* In-stock styling */
.color-options p.in-stock {
    color: #5cb85c; /* Green color for sufficient stock */
    font-weight: bold;
}




.product-price {
    font-size: 1.2em;
}
.current-price {
    color: #e74c3c; /* Discounted price in red */
}
.original-price {
    font-size: 0.9em;
    color: #666;
    margin-left: 5px;
}



.swal-2025 {
    border-radius: 12px;
    background: linear-gradient(135deg, #1E293B, #334155); /* Dark slate gradient */
    color: #FFFFFF;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    padding: 20px;
}

.swal-title-2025 {
    font-family: 'Montserrat', sans-serif;
    font-size: 20px;
    font-weight: bold;
    color: #F8FAFC; /* Light gray-white */
    margin-bottom: 10px;
}

.swal-text-2025 {
    font-family: 'Montserrat', sans-serif;
    font-size: 14px;
    color: #D1D5DB; /* Soft gray */
}

.swal-button-2025 {
    background-color: #FF6F61; /* Coral accent */
    border: none;
    border-radius: 8px;
    padding: 8px 16px;
    font-family: 'Montserrat', sans-serif;
    font-size: 14px;
    font-weight: bold;
    color: #FFFFFF;
    transition: background-color 0.3s ease;
}

.swal-button-2025:hover {
    background-color: #FF8E7F; /* Lighter coral */
}

.swal-cancel-2025 {
    background-color: #6B7280; /* Gray for cancel */
    border: none;
    border-radius: 8px;
    padding: 8px 16px;
    font-family: 'Montserrat', sans-serif;
    font-size: 14px;
    font-weight: bold;
    color: #FFFFFF;
    transition: background-color 0.3s ease;
}

.swal-cancel-2025:hover {
    background-color: #9CA3AF; /* Lighter gray */
}

.swal2-timer-progress-bar {
    background: #FF6F61; /* Coral progress bar */
}





/* Related Products Styling */
.related-products-container {
    display: flex;
    gap: 20px;
    flex-wrap: wrap;
}

.related-product-card {
    border: 1px solid #F4F7F7;
    border-radius: 8px;
    padding: 15px;
    width: 200px;
    text-align: center;
    transition: transform 0.3s ease;
}

.related-product-card:hover {
    transform: translateY(-5px);
}

.related-product-image {
    max-width: 100%;
    height: auto;
    border-radius: 4px;
}

.related-product-name {
    font-size: 16px;
    margin: 10px 0;
    color: #333333;
}

.related-product-price {
    margin-bottom: 10px;
}

.current-price {
    font-size: 16px;
    font-weight: bold;
    color: #E5574E; /* Coral-red */
}

.original-price {
    font-size: 14px;
    color: #666666; /* Gray for strikethrough */
    margin-left: 5px;
}

.discount-percentage {
    font-size: 12px;
    color: #28A745; /* Green for discount */
    margin-left: 5px;
}

.btn-primary {
    background-color: #E5574E; /* Coral-red */
    color: #FFFFFF; /* White */
    border: none;
    padding: 8px 16px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    margin-right: 5px; /* Space between buttons */
}

.btn-primary:hover {
    background-color: #F87168; /* Lighter coral-red */
}

.btn-secondary {
    background-color: #FFFFFF; /* White */
    color: #E5574E; /* Coral-red */
    border: 1px solid #E5574E;
    padding: 8px 16px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.btn-secondary:hover {
    background-color: #F4F7F7; /* Light gray */
}

/* Swal Toast Styling */
.swal-custom-toast {
    border-radius: 8px;
    background: #F4F7F7;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    padding: 10px 20px;
    width: auto;
}

.swal-title-toast {
    font-family: 'Montserrat', sans-serif;
    font-size: 16px;
    font-weight: bold;
    color: #E5574E;
    margin: 0;
    padding: 0;
}

.swal-text-toast {
    font-family: 'Montserrat', sans-serif;
    font-size: 12px;
    color: #333333;
    margin: 5px 0 0;
    padding: 0;
}

.swal2-timer-progress-bar {
    background: #E5574E;
    height: 3px;
}


		</style>
	</head>

	<body>

        <%- include('../partials/userNavbar') %>




        

		



		<div class="container">
			<div class="product-container">
		
				<!-- Product Images -->
				<div class="product-images">
					<img id="mainImage" 
						src="<%= product.images.length > 0 ? product.images[0] : '/images/default.png' %>" 
						alt="<%= product.name %>" 
						class="main-image"
						onmousemove="zoomImage(this, event)"
						onmouseleave="resetZoom(this)">
		
					<% if (product.images.length > 1) { %>
						<div class="thumbnail-container">
							<% product.images.slice(0, 4).forEach((img, index) => { %>
								<img src="<%= img %>" 
									alt="Thumbnail <%= index + 1 %>" 
									class="thumbnail <%= index === 0 ? 'active' : '' %>" 
									onclick="changeImage('<%= img %>')">
							<% }); %>
						</div>
					<% } %>
				</div>
		
				<!-- Product Info -->
				<div class="product-info">
					<div class="product-path">
						<a href="/user/home">Home</a> &gt; <a href="#"><%= product.category.name %></a>
					</div>
					
					<h1 class="product-title"><%= product.name %></h1>
					<div class="product-brand">Brand: <%= product.brand %></div>
		
					<div class="product-rating">
						<div class="stars">★★★★☆</div>
						<div class="review-count">245 Reviews</div>
					</div>


		
					<div class="product-price">
                        <% if (product.offers && product.offers.length > 0) { %>
                            <% console.log(`1 - Offers found for product: ${product.offers.length}`); %>
                            <% const bestOffer = product.offers.reduce((max, offer) => 
                                offer.discountValue > max.discountValue ? offer : max, product.offers[0]); %>
                            <% const discount = bestOffer.discountValue; %>
                            <% const discountedPrice = Math.round(product.price * (1 - discount / 100)); %>
                            <div class="current-price">
                                ₹<%= discountedPrice %>
                                <span class="original-price"><s>₹<%= product.price %></s></span>
                                <span class="discount-percentage">(<%= discount %>% off)</span>
                            </div>
                        <% } else { %>
                            <% console.log(`2 - No offers for product`); %>
                            <div class="current-price">₹<%= product.price %></div>
                        <% } %>
                    </div>



					<p class="product-description"><%= product.description %></p>
		
					<div class="product-meta">
						<div class="meta-item">
							<div class="meta-label">Category:</div>
							<div class="meta-value"><%= product.category.name %></div>
						</div>
						
					</div>
		
				

					<div class="product-colors">
                        <div class="section-title">Color Variants</div>
                        <div class="color-options">
                            <% if (product.variant && product.variant.color) { %>
                                <div class="color-option" 
                                     style="background-color: <%= product.variant.color %>;" 
                                     title="<%= product.variant.color %>">
                                </div>
                                <% if (product.variant.stock <= 0) { %>
                                    <p class="out-of-stock">Out of Stock</p>
                                <% } else { %>
                                    <p class="<%= product.variant.stock > 5 ? 'in-stock' : 'low-stock' %>">
                                        Stock: <%= product.variant.stock %>
                                    </p>
                                <% } %>
                            <% } else { %>
                                <p>No variant available.</p>
                            <% } %>
                        </div>
                    </div>
					



					<% if (product.variant && product.variant.stock > 0) { %>
                        <div class="product-stock">
                            <label for="quantity" class="stock-label">Select Quantity:</label>
                            <div class="stock-controls">
                                <button type="button" class="stock-btn" onclick="updateStock(-1)">−</button>
                                <input type="number" id="quantity" name="quantity" value="1" min="1" max="3" class="form-control" readonly>
                                <button type="button" class="stock-btn" onclick="updateStock(1)">+</button>
                            </div>
                            <p id="stock-message" class="stock-message" style="color: red; display: none;">Max 3 stocks per user</p>
                        </div>
                    
                        <div class="product-actions">
                            <form onsubmit="event.preventDefault(); addToCart('<%= product._id %>');">
                                <input type="hidden" name="productId" value="<%= product._id %>">
                                <input type="hidden" name="color" value="<%= product.variant ? product.variant.color : '' %>">
                                <input type="hidden" name="quantity" id="finalQuantity" value="1">
                                <button type="submit" class="btn btn-primary">Add to Cart</button>
                            </form>
                            <!-- Wishlist Button -->
                            <button class="btn btn-secondary wishlist-btn" data-product-id="<%= product._id %>">
                                Wishlist
                            </button>
                        </div>
                    <% } else { %>
                        <div class="product-actions">
                            <!-- Only show Wishlist Button when stock is 0 or less -->
                            <button class="btn btn-secondary wishlist-btn" data-product-id="<%= product._id %>">
                                Wishlist
                            </button>
                        </div>
                    <% } %>


				</div>
			</div>
		
	<!-- Related Products Section (within the same page as product details) -->
<div class="related-products">
    <h2 class="related-title">Related Products</h2>
    <div class="related-products-container">
        <% if (relatedProducts && relatedProducts.length > 0) { %>
            <% relatedProducts.forEach(product => { %>
                <div class="related-product-card">
                    <!-- Clickable area for navigation -->
                    <div class="clickable-area" onclick="window.location.href='/user/product/<%= product._id %>'" style="cursor: pointer;">
                        <img src="<%= product.images && product.images.length > 0 ? product.images[0] : '/images/default.png' %>"
                             alt="<%= product.name %>"
                             class="related-product-image">
                        <div class="related-product-name"><%= product.name %></div>
                        <div class="related-product-price">
                            <% if (product.offers && product.offers.length > 0) { %>
                                <% const bestOffer = product.offers.reduce((max, offer) => 
                                    offer.discountValue > max.discountValue ? offer : max, product.offers[0]); %>
                                <% const discount = bestOffer.discountValue; %>
                                <% const discountedPrice = Math.round(product.price * (1 - discount / 100)); %>
                                <div class="current-price">
                                    ₹<%= discountedPrice %>
                                    <span class="original-price"><s>₹<%= product.price %></s></span>
                                    <span class="discount-percentage">(<%= discount %>% off)</span>
                                </div>
                            <% } else { %>
                                <div class="current-price">₹<%= product.price %></div>
                            <% } %>
                        </div>
                    </div>

                    <!-- Add to Cart Form (Hidden if stock <= 0) -->
                    <% if (product.variant && product.variant.stock > 0) { %>
                        <form onsubmit="event.preventDefault(); event.stopPropagation(); addRelatedProductToCart('<%= product._id %>'); return false;">
                            <input type="hidden" name="productId" value="<%= product._id %>">
                            <input type="hidden" name="color" value="<%= product.variant ? product.variant.color : '' %>">
                            <input type="hidden" name="quantity" value="1" min="1" class="form-control">
                            <button type="submit" class="btn btn-primary">Add to Cart</button>
                        </form>
                    <% } %>

                    <!-- Wishlist Button (Always Visible) -->
                    <button class="btn btn-secondary wishlist-btn" data-product-id="<%= product._id %>"
                            onclick="event.stopPropagation(); addToWishlist('<%= product._id %>');">
                        Wishlist
                    </button>
                </div>
            <% }) %>
        <% } else { %>
            <p>No related products available.</p>
        <% } %>
    </div>
</div>

</div>









     



			





<%- include('../partials/userFooter') %>

		
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<script>

//wishlist



document.addEventListener("DOMContentLoaded", function () {
    const wishlistButtons = document.querySelectorAll(".wishlist-btn");

    wishlistButtons.forEach(button => {
        button.addEventListener("click", async function () {
            const productId = this.getAttribute("data-product-id");

            try {
                const response = await fetch("/user/wishlist/add", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ productId })
                });

                const result = await response.json();

                if (response.ok) {
                    Swal.fire({
                        icon: "success",
                        title: "Added to Wishlist!",
                        text: result.message,
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 1000,
                        customClass: {
                            popup: 'swal-custom-toast',
                            title: 'swal-title-toast',
                            content: 'swal-text-toast'
                        },
                        background: '#F4F7F7', // Light gray background
                        timerProgressBar: true,
                        iconColor: '#28A745' // Green for success
                    });
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "Failed to Add!",
                        text: result.error || "Could not add product to wishlist.",
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 1000,
                        customClass: {
                            popup: 'swal-custom-toast',
                            title: 'swal-title-toast',
                            content: 'swal-text-toast'
                        },
                        background: '#F4F7F7',
                        timerProgressBar: true,
                        iconColor: '#E5574E' // Coral-red for error
                    });
                }
            } catch (error) {
                console.error("Error adding to wishlist:", error);
                Swal.fire({
                    icon: "error",
                    title: "Error!",
                    text: "Failed to add to wishlist. Please try again.",
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 1000,
                    customClass: {
                        popup: 'swal-custom-toast',
                        title: 'swal-title-toast',
                        content: 'swal-text-toast'
                    },
                    background: '#F4F7F7',
                    timerProgressBar: true,
                    iconColor: '#E5574E' // Coral-red for error
                });
            }
        });
    });
});



function changeImage(newImage) {
    let mainImage = document.getElementById("mainImage");
    let thumbnails = document.querySelectorAll(".thumbnail");

    // Swap main image
    mainImage.src = newImage;

    // Remove 'active' class from all thumbnails
    thumbnails.forEach(thumbnail => thumbnail.classList.remove("active"));

    // Add 'active' class to clicked thumbnail
    thumbnails.forEach(thumbnail => {
        if (thumbnail.src === newImage) {
            thumbnail.classList.add("active");
        }
    });
}




function zoomImage(imageElement, event) {
    const rect = imageElement.getBoundingClientRect();
    const x = event.clientX - rect.left;
    const y = event.clientY - rect.top;

    const xPercent = (x / rect.width) * 100;
    const yPercent = (y / rect.height) * 100;

    imageElement.style.transformOrigin = `${xPercent}% ${yPercent}%`;
    imageElement.style.transform = "scale(2.0)";
    imageElement.style.cursor = "zoom-in";
  }

  function resetZoom(imageElement) {
    imageElement.style.transform = "scale(1)";
    imageElement.style.cursor = "default";
  }

  function changeImage(imageSrc) {
    const mainImage = document.getElementById('mainImage');
    mainImage.src = imageSrc;
    resetZoom(mainImage);
  }











function addToCart(productId) {
    const button = document.querySelector(`form[onsubmit*="addToCart('${productId}')"] button`);
    button.disabled = true; // Disable button to prevent multiple clicks

    fetch('/user/cart/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
            productId: productId,
            color: document.querySelector('input[name="color"]').value,
            quantity: document.querySelector('#finalQuantity').value
        })
    })
    .then(response => response.json())
    .then(data => {
        button.disabled = false; // Re-enable button after response
        if (data.success) {
            Swal.fire({
                icon: "success",
                title: "Added to Cart!",
                text: data.message || "Product successfully added to cart.",
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 1000,
                customClass: {
                    popup: 'swal-custom-toast',
                    title: 'swal-title-toast',
                    content: 'swal-text-toast'
                },
                background: '#F4F7F7', // Light gray background
                timerProgressBar: true,
                iconColor: '#28A745' // Green for success
            });

            if (data.redirect) {
                setTimeout(() => {
                    window.location.href = data.redirect;
                }, 1000);
            }
        } else {
            Swal.fire({
                icon: "error",
                title: "Failed to Add!",
                text: data.message || "Could not add product to cart.",
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 1000,
                customClass: {
                    popup: 'swal-custom-toast',
                    title: 'swal-title-toast',
                    content: 'swal-text-toast'
                },
                background: '#F4F7F7',
                timerProgressBar: true,
                iconColor: '#E5574E' // Coral-red for error
            });
        }
    })
    .catch(error => {
        button.disabled = false; // Re-enable button on error
        console.error("Error:", error);
        Swal.fire({
            icon: "error",
            title: "Error!",
            text: "Something went wrong. Please try again.",
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 1000,
            customClass: {
                popup: 'swal-custom-toast',
                title: 'swal-title-toast',
                content: 'swal-text-toast'
            },
            background: '#F4F7F7',
            timerProgressBar: true,
            iconColor: '#E5574E' // Coral-red for error
        });
    });
}




function updateStock(change) {
    let quantityInput = document.getElementById('quantity');
    let finalQuantityInput = document.getElementById('finalQuantity');
    let stockMessage = document.getElementById('stock-message');

    let currentValue = parseInt(quantityInput.value);
    let newValue = currentValue + change;

    if (newValue >= 1 && newValue <= 3) {
        quantityInput.value = newValue;
        finalQuantityInput.value = newValue;
        stockMessage.style.display = 'none';
    } else if (newValue > 3) {
        stockMessage.style.display = 'block';
        Swal.fire({
            icon: "warning",
            title: "Stock Limit Reached!",
            text: "You can only add up to 3 items per product.",
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 1000
        });
    }
}
	

function addRelatedProductToCart(productId) {
    console.log(`Adding related product to cart: ${productId}`);
    const formSelector = `form[onsubmit*="addRelatedProductToCart('${productId}')"]`;
    const button = document.querySelector(`${formSelector} button`);
    if (!button) {
        console.error(`Button not found for productId: ${productId}`);
        return;
    }
    button.disabled = true;

    const colorInput = document.querySelector(`${formSelector} input[name="color"]`);
    const quantityInput = document.querySelector(`${formSelector} input[name="quantity"]`);

    fetch('/user/cart/add', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
            productId: productId,
            color: colorInput ? colorInput.value : '',
            quantity: quantityInput ? quantityInput.value : '1'
        })
    })
    .then(response => {
        console.log(`Response status: ${response.status}`);
        return response.json();
    })
    .then(data => {
        button.disabled = false;
        console.log('Response data:', data);
        if (data.success) {
            console.log('Showing success toast');
            Swal.fire({
                icon: "success",
                title: "Added to Cart!",
                text: data.message || "Product successfully added to cart.",
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 1000,
                customClass: {
                    popup: 'swal-custom-toast',
                    title: 'swal-title-toast',
                    content: 'swal-text-toast'
                },
                background: '#F4F7F7',
                timerProgressBar: true,
                iconColor: '#28A745'
            });
        } else {
            console.log('Showing error toast');
            Swal.fire({
                icon: "error",
                title: "Failed to Add!",
                text: data.message || "Could not add product to cart.",
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 1000,
                customClass: {
                    popup: 'swal-custom-toast',
                    title: 'swal-title-toast',
                    content: 'swal-text-toast'
                },
                background: '#F4F7F7',
                timerProgressBar: true,
                iconColor: '#E5574E'
            });
        }
    })
    .catch(error => {
        button.disabled = false;
        console.error("Error adding to cart:", error);
        console.log('Showing catch error toast');
        Swal.fire({
            icon: "error",
            title: "Error!",
            text: "Something went wrong. Please try again.",
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 1000,
            customClass: {
                popup: 'swal-custom-toast',
                title: 'swal-title-toast',
                content: 'swal-text-toast'
            },
            background: '#F4F7F7',
            timerProgressBar: true,
            iconColor: '#E5574E'
        });
    });
}
	</script>

	</body>

</html>
